<?xml version="1.0"?>
<!-- Generated by Docutils 0.17.1 -->
<section>
  <title>Multiple Choice Exercises for Unit 1a (1.1-1.6)</title>
  <p>The Mark Complete button and green check mark are intentionally not included for this page because there may be many quiz-bank exercises on this page.</p>
  <exercises>
    <exercise label="qve_1">
        <statement>

        <p> What does the following code print?</p>
        <program language="java"><input>
System.out.println(2 % 3);
</input></program>

        </statement>
<choices>

            <choice correct="yes">
                <statement>
                    <p>2</p>
                </statement>
                <feedback>
                    <p>Whenever the first number is smaller than the second, the remainder is the first number.  Remember that % is the remainder and 3 goes into 2 0 times with a remainder of 2.</p>
                </feedback>
            </choice>

            <choice>
                <statement>
                    <p>0</p>
                </statement>
                <feedback>
                    <p>This is the number of times that 3 goes into 2 but the % operator gives you the remainder.</p>
                </feedback>
            </choice>

            <choice>
                <statement>
                    <p>3</p>
                </statement>
                <feedback>
                    <p>Try it.  Remember that % gives you the remainder after you divide the first number by the second one.</p>
                </feedback>
            </choice>

            <choice>
                <statement>
                    <p>1</p>
                </statement>
                <feedback>
                    <p>This would be correct if it was 3 % 2 since 2 would go into 3 one time with a remainder of 1.</p>
                </feedback>
            </choice>
</choices>

    </exercise>
    <exercise label="qve_2">
        <statement>

        <p> What does the following code print?</p>
        <program language="java"><input>
System.out.println(19 % 5);
</input></program>

        </statement>
<choices>

            <choice>
                <statement>
                    <p>3</p>
                </statement>
                <feedback>
                    <p>This is the number of times that 5 goes into 19, but % is the remainder.</p>
                </feedback>
            </choice>

            <choice>
                <statement>
                    <p>0</p>
                </statement>
                <feedback>
                    <p>This would only be true if the first number was evenly divisible by the second number.</p>
                </feedback>
            </choice>

            <choice correct="yes">
                <statement>
                    <p>4</p>
                </statement>
                <feedback>
                    <p>5 goes into 19 3 times (15) with a remainder of 4 (19-15=4)</p>
                </feedback>
            </choice>

            <choice>
                <statement>
                    <p>1</p>
                </statement>
                <feedback>
                    <p>This would be correct if it was 19 % 2, but here we are dividing by 5.</p>
                </feedback>
            </choice>
</choices>

    </exercise>
    <exercise label="qve_3">
        <statement>

        <p> What does the following code print?</p>
        <program language="java"><input>
System.out.println(1 / 3);
</input></program>

        </statement>
<choices>

            <choice>
                <statement>
                    <p>0.3333333333333333</p>
                </statement>
                <feedback>
                    <p>This would be correct if it was 1.0 / 3 or 1 / 3.0.</p>
                </feedback>
            </choice>

            <choice correct="yes">
                <statement>
                    <p>0</p>
                </statement>
                <feedback>
                    <p>When two integers are divided the results will also be integer and the fractional part is thrown away.</p>
                </feedback>
            </choice>

            <choice>
                <statement>
                    <p>It will give a run-time error</p>
                </statement>
                <feedback>
                    <p>You would get a run-time error if it was 1 / 0, because you can not divide by zero.</p>
                </feedback>
            </choice>

            <choice>
                <statement>
                    <p>0.3</p>
                </statement>
                <feedback>
                    <p>Try it. Is this what you get?</p>
                </feedback>
            </choice>

            <choice>
                <statement>
                    <p>It will give a compile-time error</p>
                </statement>
                <feedback>
                    <p>Integer division is allowed in Java.  It gives an integer result.</p>
                </feedback>
            </choice>
</choices>

    </exercise>
    <exercise label="qve_4">
        <statement>

        <p> What does the following code print?</p>
        <program language="java"><input>
System.out.println(2 + 3 * 5 - 1);
</input></program>

        </statement>
<choices>

            <choice>
                <statement>
                    <p>24</p>
                </statement>
                <feedback>
                    <p>This would be true if it was System.out.println(((2 + 3) * 5) - 1), but without the parentheses the multiplication is done first.</p>
                </feedback>
            </choice>

            <choice>
                <statement>
                    <p>14</p>
                </statement>
                <feedback>
                    <p>This would be true if it was System.out.println(2 + (3 * (5 - 1))), but without the parentheses the multiplication is done first and the addition and subtraction are handled from left to right.</p>
                </feedback>
            </choice>

            <choice>
                <statement>
                    <p>This will give a compile time error.</p>
                </statement>
                <feedback>
                    <p>This will compile and run.  Try it in DrJava.  Look up operator precedence in Java.</p>
                </feedback>
            </choice>

            <choice correct="yes">
                <statement>
                    <p>16</p>
                </statement>
                <feedback>
                    <p>The multiplication is done first (3 * 5 = 15) and then the addition (2 + 15 = 17) and finally the subtraction (17 - 1 = 16).</p>
                </feedback>
            </choice>
</choices>

    </exercise>
    <exercise label="qve_5">
        <statement>

        <p> Given the following code segment, what is the value of b when it finishes executing?</p>
        <blockquote>
            <program language="java"><input>
double a = 9.6982;
int b = 12;
b = (int) a;
</input></program>
        </blockquote>

        </statement>
<choices>

            <choice>
                <statement>
                    <p>9.6982</p>
                </statement>
                <feedback>
                    <p>This would be true if it was b = a.  What does the (int) do?</p>
                </feedback>
            </choice>

            <choice>
                <statement>
                    <p>12</p>
                </statement>
                <feedback>
                    <p>This is the initial value of b, but then b is assigned to be the result of casting the value in a to an integer. Casting to an integer from a double will truncate (throw away) the digits after the decimal.</p>
                </feedback>
            </choice>

            <choice>
                <statement>
                    <p>10</p>
                </statement>
                <feedback>
                    <p>Java does not round when converting from a double to an integer.</p>
                </feedback>
            </choice>

            <choice correct="yes">
                <statement>
                    <p>9</p>
                </statement>
                <feedback>
                    <p>When a double is converted into an integer in Java, it truncates (throws away) the digits after the decimal.</p>
                </feedback>
            </choice>
</choices>

    </exercise>
    <exercise label="qve_new7">
        <statement>

        <p> What does the following code do when it is executed?</p>
        <blockquote>
            <program language="java"><input>
System.out.println(5 / 0);
</input></program>
        </blockquote>

        </statement>
<choices>

            <choice>
                <statement>
                    <p>It will print 0</p>
                </statement>
                <feedback>
                    <p>This would be true if it was System.out.println(0 / 5)</p>
                </feedback>
            </choice>

            <choice correct="yes">
                <statement>
                    <p>It will give a run-time error</p>
                </statement>
                <feedback>
                    <p>You can't divide by 0 so this cause a run-time error.</p>
                </feedback>
            </choice>

            <choice>
                <statement>
                    <p>It will give a compile-time error (won't compile)</p>
                </statement>
                <feedback>
                    <p>You might think that this would be caught at compile time, but it isn't.</p>
                </feedback>
            </choice>

            <choice>
                <statement>
                    <p>It will print 5</p>
                </statement>
                <feedback>
                    <p>This would be true if it was System.out.println(5 / 1)</p>
                </feedback>
            </choice>
</choices>

    </exercise>
    <exercise label="qve_new9">
        <statement>

        <p> What will the following code print?</p>
        <blockquote>
            <program language="java"><input>
System.out.println(1.0 / 3);
</input></program>
        </blockquote>

        </statement>
<choices>

            <choice>
                <statement>
                    <p>0</p>
                </statement>
                <feedback>
                    <p>This would be true if it was (1 / 3).</p>
                </feedback>
            </choice>

            <choice>
                <statement>
                    <p>.3</p>
                </statement>
                <feedback>
                    <p>It will give you more than just one digit after the decimal sign.</p>
                </feedback>
            </choice>

            <choice correct="yes">
                <statement>
                    <p>0.3333333333333333</p>
                </statement>
                <feedback>
                    <p>The computer can not represent an infinite number of 3's after the decimal point so it only keeps 14 to 15 significant digits.</p>
                </feedback>
            </choice>

            <choice>
                <statement>
                    <p>0.3 with an infinite number of 3's following the decimal point</p>
                </statement>
                <feedback>
                    <p>The computer can not represent an infinite number of 3's after the decimal point.</p>
                </feedback>
            </choice>
</choices>

    </exercise>
    <exercise label="qve_new10">
        <statement>

        <p> What are the values of x, y, and z after the following code executes?</p>
        <blockquote>
            <program language="java"><input>
int x = 3;
int y = x;
int z = x * y;
x++;
</input></program>
        </blockquote>

        </statement>
<choices>

            <choice>
                <statement>
                    <p>x = 3, y = 3, z = 9</p>
                </statement>
                <feedback>
                    <p>This would be true if the x++ wasn't there.</p>
                </feedback>
            </choice>

            <choice correct="yes">
                <statement>
                    <p>x = 4, y = 3, z = 9</p>
                </statement>
                <feedback>
                    <p>First x is set to 3, then y is also set to 3, and next z is set to 3 * 3 = 9.  Finally x is incremented to 4.</p>
                </feedback>
            </choice>

            <choice>
                <statement>
                    <p>x = 0, y = 3, z = 0</p>
                </statement>
                <feedback>
                    <p>You might think that y = x means that y takes x's value, but y is set to a copy of x's value.</p>
                </feedback>
            </choice>

            <choice>
                <statement>
                    <p>x = 4, y = 4, z = 9</p>
                </statement>
                <feedback>
                    <p>You might think that y = x means that if x is incremented that y will also be incremented, but y = x only sets y to a copy of x's value and doesn't keep them in sync.</p>
                </feedback>
            </choice>
</choices>

    </exercise>
  </exercises>
</section>
