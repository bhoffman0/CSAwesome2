<?xml version="1.0"?>
<!-- Generated by Docutils 0.19 -->
<section>
  <title>Unit 2 Write Code for Toggle Code</title>
  <p>This is the write code problems associated with the mixed up code problems.</p>
  <exercises>
    <exercise label="u2_muc_wc1">
      <statement>
        <p>Write code that prints a random number from 1 to 50.</p>
      </statement>
      <program xml:id="UNIQUE-ID-000771" interactive="activecode" language="java">
        <input>
public class Test1
{
    public static void main(String[] args)
    {
        // Add your code here

    }
}

 </input><tests>
 import static org.junit.Assert.*;

 import org.junit.*;

 import java.io.*;

 public class RunestoneTests extends CodeTestHelper
 {
     public RunestoneTests()
     {
         super("Test1");
     }

     @Test
     public void test1()
     {
         String output = getMethodOutput("main");
         String expect = "Any number between 1 and 50";
         int out = Integer.parseInt(output);

         boolean passed = (out &gt; 0) &amp;&amp; (out &lt;= 50);

         passed = getResults(expect, output, "Running main", passed);
         assertTrue(passed);
     }

     @Test
     public void test2()
     {
         boolean passed = checkCodeContains("Math.random()");
         assertTrue(passed);
     }

     @Test
     public void test3()
     {
         boolean passed = checkCodeContains("50");
         assertTrue(passed);
     }

     @Test
     public void test4()
     {
         boolean passed = checkCodeContains("+1");
         assertTrue(passed);
     }

     @Test
     public void test5()
     {
         boolean passed = checkCodeContains("(int)");
         assertTrue(passed);
     }
 }
        </tests>
        <tests>


</tests>
      </program>
    </exercise>
    <exercise label="u2_muc_wc2">
      <statement>
        <p>Write code that prints the first 2 characters of the message followed by the last 2 characters of the message using the appropriate String methods.</p>
      </statement>
      <program xml:id="UNIQUE-ID-000772" interactive="activecode" language="java">
        <input>
public class Test1
{
    public static void main(String[] args)
    {
        String message = "I hope this works";
        // Add your code here

    }
}

 </input><tests>
 import static org.junit.Assert.*;

 import org.junit.*;

 import java.io.*;

 public class RunestoneTests extends CodeTestHelper
 {
     public RunestoneTests()
     {
         super("Test1");
     }

     @Test
     public void test1()
     {
         String output = getMethodOutput("main");
         String expect = "I ks";

         boolean passed = getResults(expect, output, "Running main");
         assertTrue(passed);
     }

     @Test
     public void test2()
     {
         boolean passed = checkCodeContains(".substring(0, 2)");
         assertTrue(passed);
     }

     @Test
     public void test3()
     {
         boolean passed = checkCodeContains(".length()");
         assertTrue(passed);
     }
 }
        </tests>
        <tests>


</tests>
      </program>
    </exercise>
    <exercise label="u2_muc_wc3">
      <statement>
        <p>Write code that prints the first letters in first, middle, and last in lowercase letters using the appropriate String methods.</p>
      </statement>
      <program xml:id="UNIQUE-ID-000773" interactive="activecode" language="java">
        <input>
public class Test1
{
    public static void main(String[] args)
    {
        String first = "Gerald";
        String middle = "Foster";
        String last = "Jones";

        // Add your code here

    }
}

 </input><tests>
 import static org.junit.Assert.*;

 import org.junit.*;

 import java.io.*;

 public class RunestoneTests extends CodeTestHelper
 {
     public RunestoneTests()
     {
         super("Test1");
     }

     @Test
     public void test1()
     {
         String output = getMethodOutput("main");
         String expect = "gfj";

         boolean passed = getResults(expect, output, "Running main");
         assertTrue(passed);
     }
 }
        </tests>
        <tests>


</tests>
      </program>
    </exercise>
    <exercise label="u2_muc_wc4">
      <statement>
        <p>Write code that prints the message in all uppercase letters using the appropriate String methods.</p>
      </statement>
      <program xml:id="UNIQUE-ID-000774" interactive="activecode" language="java">
        <input>
public class Test1
{
    public static void main(String[] args)
    {
        String message = "Don't Pokemon and drive!";

        // Add your code here

    }
}

 </input><tests>
 import static org.junit.Assert.*;

 import org.junit.*;

 import java.io.*;

 public class RunestoneTests extends CodeTestHelper
 {
     public RunestoneTests()
     {
         super("Test1");
     }

     @Test
     public void test1()
     {
         String output = getMethodOutput("main");
         String message = "Don't Pokemon and drive!";
         String expect = message.toUpperCase();

         boolean passed = getResults(expect, output, "Running main");
         assertTrue(passed);
     }
 }
        </tests>
        <tests>


</tests>
      </program>
    </exercise>
    <exercise label="u2_muc_wc5">
      <statement>
        <p>Write code that prints the first 3 letters of the message in uppercase letters using the appropriate String methods.</p>
      </statement>
      <program xml:id="UNIQUE-ID-000775" interactive="activecode" language="java">
        <input>
public class Test1
{
    public static void main(String[] args)
    {
        String message = "Have a nice day!";

        // Add your code here

    }
}

 </input><tests>
 import static org.junit.Assert.*;

 import org.junit.*;

 import java.io.*;

 public class RunestoneTests extends CodeTestHelper
 {
     public RunestoneTests()
     {
         super("Test1");
     }

     @Test
     public void test1()
     {
         String output = getMethodOutput("main");
         String expect = "HAV";

         boolean passed = getResults(expect, output, "Running main");
         assertTrue(passed);
     }
 }
        </tests>
        <tests>


</tests>
      </program>
    </exercise>
    <exercise label="u2_muc_wc6">
      <statement>
        <p>Write code that print the part of the message starting with the word &#x201C;nice&#x201D; using the appropriate String methods.</p>
      </statement>
      <program xml:id="UNIQUE-ID-000776" interactive="activecode" language="java">
        <input>
public class Test1
{
    public static void main(String[] args)
    {
        String message = "Have a nice day!";

        // Add your code here

    }
}

 </input><tests>
 import static org.junit.Assert.*;

 import org.junit.*;

 import java.io.*;

 public class RunestoneTests extends CodeTestHelper
 {
     public RunestoneTests()
     {
         super("Test1");
     }

     @Test
     public void test1()
     {
         String output = getMethodOutput("main");
         String expect = "nice day";

         boolean passed = getResults(expect, output, "Running main");
         assertTrue(passed);
     }
 }
        </tests>
        <tests>


</tests>
      </program>
    </exercise>
  </exercises>
</section>
