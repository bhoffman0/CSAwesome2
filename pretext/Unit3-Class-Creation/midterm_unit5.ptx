<?xml version="1.0"?>
<!-- Generated by Docutils 0.17.1 -->
<section xml:id="midterm-test">
        <title>Midterm Test</title>
        <p>The following 20 questions are similar to what you might see on the AP CSA exam for Units 1 - 5.  You may only take this test once while logged in. There are no time limits, but it will keep track of how much time you take. Click on the finish button after you have answered all the questions, and the number correct and feedback on the answers will be displayed.</p>
        <p>We estimate that a score of about 50% on this test would correspond to the passing grade of 3 on the AP exam, a score of 65% to a 4, and a score of 80% and above to a 5 on the AP exam. These are just estimates and may not correspond to individual scores.</p>
        <exercises time-limit="">

    <exercise label="mid_1_1">
        <statement>

            <p> Which of the following code segments will produce the displayed output?</p>
            <program language="java"><input>
/* Output:
1
22
333
4444
55555
*/

//Loop I
for (int i = 1; i &lt;= 5; i++)
{
   for (int j = i; j &gt; 0; j--)
   {
      System.out.print(i);
   }
   System.out.println();
}

//Loop II
for (int i = 0; i &lt; 5; i++)
{
   for (int j = 0; j &lt; i; j++)
   {
      System.out.print(i);
   }
   System.out.println();
}

//Loop III
for (int i = 1; i &lt; 5; i++)
{
   for (int j = i; j &gt; 0; j--)
   {
      System.out.print(i);
   }
   System.out.println();
}

//Loop IV
for (int i = 1; i &lt; 6; i++)
{
   for (int j = 0; j &lt; i; j++)
   {
      System.out.println(i);
   }
}

//Loop V
for (int i = 0; i &lt; 5; i++) {
   for (int j = 0; j &lt; i; j++) {
      System.out.print(i+1);
   }
   System.out.println();
}
</input></program>

        </statement>
<choices>

            <choice correct="yes">
                <statement>
                    <p>I only</p>
                </statement>
                <feedback>
                    <p>Correct! This will loop with i changing from 1 to 5 and then for each i, j will loop from i to 0 printing the value of i and then a new line.</p>
                </feedback>
            </choice>

            <choice>
                <statement>
                    <p>I and II only</p>
                </statement>
                <feedback>
                    <p>II will loop i from 0 to 4 and j from 0 to i, neglecting to ouput 5.</p>
                </feedback>
            </choice>

            <choice>
                <statement>
                    <p>III only</p>
                </statement>
                <feedback>
                    <p>III will loop with i changing from 1 to 4 and j from i to 0.</p>
                </feedback>
            </choice>

            <choice>
                <statement>
                    <p>IV and V only</p>
                </statement>
                <feedback>
                    <p>IV will loop with i changing from 1 to 5 and j from 0 to i but it will print each value on a different line.</p>
                </feedback>
            </choice>

            <choice>
                <statement>
                    <p>V only</p>
                </statement>
                <feedback>
                    <p>V will loop with i changing from 0 to 4 and j from 0 to i.</p>
                </feedback>
            </choice>
</choices>

    </exercise>

    <exercise label="mid_1_2">
        <statement>

            <p> Consider the following method.  What is the output from <c>conditionTest(3,-2);</c>?</p>
            <program language="java"><input>
public static void conditionTest(int num1, int num2)
{
   if ((num1 &gt; 0) &amp;&amp; (num2 &gt; 0))
   {
      if (num1 &gt; num2)
         System.out.println("A");
      else
         System.out.println("B");
   }
   else if ((num2 &lt; 0) || (num1 &lt; 0))
   {
      System.out.println("C");
   }
   else if (num2 &lt; 0)
   {
      System.out.println("D");
   }
   else
   {
      System.out.println("E");
   }
}
</input></program>

        </statement>
<choices>

            <choice>
                <statement>
                    <p>A</p>
                </statement>
                <feedback>
                    <p>num2 is negative</p>
                </feedback>
            </choice>

            <choice>
                <statement>
                    <p>AC</p>
                </statement>
                <feedback>
                    <p>Only one letter will be printed.</p>
                </feedback>
            </choice>

            <choice correct="yes">
                <statement>
                    <p>C</p>
                </statement>
                <feedback>
                    <p>Correct because num2 is negative and an or is used.</p>
                </feedback>
            </choice>

            <choice>
                <statement>
                    <p>BD</p>
                </statement>
                <feedback>
                    <p>Only one letter will be printed.</p>
                </feedback>
            </choice>

            <choice>
                <statement>
                    <p>E</p>
                </statement>
                <feedback>
                    <p>One of the other conditions is true.</p>
                </feedback>
            </choice>
</choices>

    </exercise>

    <exercise label="mid_1_3">
        <statement>

            <p> Which of these loops will output <c>01234</c>?</p>
            <program language="java"><input>
int max = 5;

//Loop I
for (int i = 0; i &lt; max; i++)
{
   System.out.print(i);
}

//Loop II
int j = 0;
while (j &lt; max)
{
   System.out.print(j);
   j++;
}

//Loop III
int k = 0;
for (int i = max; i &gt; 0; i--)
{
   System.out.print(i);
}
</input></program>

        </statement>
<choices>

            <choice>
                <statement>
                    <p>I only</p>
                </statement>
                <feedback>
                    <p>Loop I will produce this output, but it is not the only loop that will output these values.</p>
                </feedback>
            </choice>

            <choice>
                <statement>
                    <p>II only</p>
                </statement>
                <feedback>
                    <p>Loop II will produce this output, but it is not the only loop that will output these values.</p>
                </feedback>
            </choice>

            <choice>
                <statement>
                    <p>II and III only</p>
                </statement>
                <feedback>
                    <p>Loop II is correct, but loop III will produce the reverse output, 43210.</p>
                </feedback>
            </choice>

            <choice correct="yes">
                <statement>
                    <p>I and II only</p>
                </statement>
                <feedback>
                    <p>Correct! Both of these loops will produce the correct output.</p>
                </feedback>
            </choice>

            <choice>
                <statement>
                    <p>I, II, and III</p>
                </statement>
                <feedback>
                    <p>While loop I and II will produce the correct output, loop III will actually produce the reverse of the correct output.</p>
                </feedback>
            </choice>
</choices>

    </exercise>

    <exercise label="mid_1_4">
        <statement>

            <p> Consider the following block of code. What value is returned from <c>solution(5)</c>?</p>
            <program language="java"><input>
public int solution(int limit)
{
   int s = 0;
   for (int outside = 1; outside &lt;= limit; outside++)
   {
      for (int middle = 1; middle &lt;= limit; middle++)
      {
         for (int inside = 1; inside &lt;= limit; inside++)
         {
            s++;
         }
      }
   }
  return s;
}
</input></program>

        </statement>
<choices>

            <choice>
                <statement>
                    <p>25</p>
                </statement>
                <feedback>
                    <p>This would be the correct answer if there were only two loops nested, but there are three. Try again!</p>
                </feedback>
            </choice>

            <choice>
                <statement>
                    <p>15</p>
                </statement>
                <feedback>
                    <p>Take a look at how many times each inner loop will execute every time the outer loop runs.</p>
                </feedback>
            </choice>

            <choice correct="yes">
                <statement>
                    <p>125</p>
                </statement>
                <feedback>
                    <p>Correct!</p>
                </feedback>
            </choice>

            <choice>
                <statement>
                    <p>64</p>
                </statement>
                <feedback>
                    <p>Try again - check the difference between &lt;= and &lt; in each loop.</p>
                </feedback>
            </choice>

            <choice>
                <statement>
                    <p>625</p>
                </statement>
                <feedback>
                    <p>If you got this value you probably made one extra call to the each of the loops, notice that the loops start at 1 and not 0.</p>
                </feedback>
            </choice>
</choices>

    </exercise>

    <exercise label="mid_1_5">
        <statement>

            <p> Which of the following is equivalent to !((x &gt; 10) &amp;&amp; (x &lt;= 5)) ?</p>

        </statement>
<choices>

            <choice>
                <statement>
                    <p>(x &lt; 10) &amp;&amp; (x &gt; 5)</p>
                </statement>
                <feedback>
                    <p>Use A and B to represent the expressions -- A becomes (x &gt; 10), B becomes (x &lt;= 5). ! (A &amp;&amp; B) is NOT equivalent to (!A &amp;&amp; !B).</p>
                </feedback>
            </choice>

            <choice>
                <statement>
                    <p>(x &gt; 10) &amp;&amp; (x &lt;=5)</p>
                </statement>
                <feedback>
                    <p>Use A and B to represent the expressions -- A becomes (x &gt; 10), B becomes (x &lt;= 5). ! (A &amp;&amp; B) is NOT equivalent to (A &amp;&amp; B).</p>
                </feedback>
            </choice>

            <choice>
                <statement>
                    <p>(x &lt;= 10) &amp;&amp; (x &gt; 5)</p>
                </statement>
                <feedback>
                    <p>Use A and B to represent the expressions -- A becomes (x &gt; 10), B becomes (x &lt;= 5). ! (A &amp;&amp; B) is NOT equivalent to (!A &amp;&amp; !B). The AND should be changed to an OR.</p>
                </feedback>
            </choice>

            <choice correct="yes">
                <statement>
                    <p>(x &lt;= 10) || (x &gt; 5)</p>
                </statement>
                <feedback>
                    <p>Correct!</p>
                </feedback>
            </choice>

            <choice>
                <statement>
                    <p>(x &gt; 10) || (x &lt;= 5)</p>
                </statement>
                <feedback>
                    <p>Use A and B to represent the expressions -- A becomes (x &gt; 10), B becomes (x &lt;= 5). ! (A &amp;&amp; B) is NOT equivalent to (A || B). Both A and B should also be negated.</p>
                </feedback>
            </choice>
</choices>

    </exercise>

    <exercise label="mid_1_6">
        <statement>

            <p> Consider the following class with the method <c>test</c>. What is the output after the main method is executed calling <c>test(s,b)</c>?</p>
            <program language="java"><input>
public class Test1
{
    public static void test(String str, int y)
    {
        str = str + "bow";
        y = y * 2;
    }

    public static void main(String[] args)
    {
        String s = "rain";
        int b = 4;
        test(s, b);
        System.out.println("s=" + s + "; b=" + b);
    }
}
</input></program>

        </statement>
<choices>

            <choice>
                <statement>
                    <p>s="rainbow"; b=8;</p>
                </statement>
                <feedback>
                    <p>Strings are immutable so changing str doesn't affect the string that s refers to.</p>
                </feedback>
            </choice>

            <choice>
                <statement>
                    <p>s="rain";  b=8;</p>
                </statement>
                <feedback>
                    <p>Nothing done in the method test affects the value of b.</p>
                </feedback>
            </choice>

            <choice>
                <statement>
                    <p>s="rainbow"; b=4;</p>
                </statement>
                <feedback>
                    <p>Strings are immutable so changing str doesn't affect the string that s refers to.</p>
                </feedback>
            </choice>

            <choice correct="yes">
                <statement>
                    <p>s="rain"; b=4;</p>
                </statement>
                <feedback>
                    <p>Correct!</p>
                </feedback>
            </choice>

            <choice>
                <statement>
                    <p>s="bow";  b=4;</p>
                </statement>
                <feedback>
                    <p>All changes to string s result in a new string object.</p>
                </feedback>
            </choice>
</choices>

    </exercise>

    <exercise label="mid_1_7">
        <statement>

            <p> Consider the following <c>Cat</c> class that has an <c>age</c> attribute of type int. The <c>getAge</c> method is intended to allow methods in other classes to access a Cat object’s age value; however, it does not work as intended. Which of the following best explains why the <c>getAge</c> method does NOT work as intended?</p>
            <program language="java"><input>
public class Cat
{
    private int age;

    public Cat(int a)
    {
        age = a;
    }

    public int getAge()
    {
        return a;
    }
}
</input></program>

        </statement>
<choices>

            <choice>
                <statement>
                    <p>The ``getAge()`` method should be declared as private.</p>
                </statement>
                <feedback>
                    <p>The method should be public so it can be accessed outside of the class.</p>
                </feedback>
            </choice>

            <choice>
                <statement>
                    <p>The return type of the ``getAge()`` method should be void.</p>
                </statement>
                <feedback>
                    <p>The method's return type should be int.</p>
                </feedback>
            </choice>

            <choice>
                <statement>
                    <p>The ``getAge()`` method should have at least one parameter.</p>
                </statement>
                <feedback>
                    <p>The getAge method should not take any parameters.</p>
                </feedback>
            </choice>

            <choice>
                <statement>
                    <p>The variable ``age`` is not declared inside the ``getAge()`` method.</p>
                </statement>
                <feedback>
                    <p>This is an instance variable and should be declared outside of the method.</p>
                </feedback>
            </choice>

            <choice correct="yes">
                <statement>
                    <p>The instance variable ``age`` should be returned instead of a, which is local to the constructor.</p>
                </statement>
                <feedback>
                    <p>Correct! The accessor method getAge should return the instance variable age.</p>
                </feedback>
            </choice>
</choices>

    </exercise>

    <exercise label="mid_1_8">
        <statement>

            <p> Which of the following statements are TRUE about local variables?</p>
            <p><ol marker="I">
                <li>
                    <p>Local variables can be declared in the body of constructors and methods.</p>
                </li>
                <li>
                    <p>Local variables may only be used within the constructor or method and cannot be declared to be public or private.</p>
                </li>
                <li>
                    <p>When there is a local variable with the same name as an instance variable, the variable name will refer to the local variable instead of the instance variable.</p>
                </li>
            </ol></p>

        </statement>
<choices>

            <choice>
                <statement>
                    <p>I only</p>
                </statement>
                <feedback>
                    <p>It's true that the local variables can be declared in the body of constructors and methods, but there are other options that are also true about local variables.</p>
                </feedback>
            </choice>

            <choice>
                <statement>
                    <p>I and II only</p>
                </statement>
                <feedback>
                    <p>Both I and II are true but III is also true regarding local variables.</p>
                </feedback>
            </choice>

            <choice>
                <statement>
                    <p>I and III only</p>
                </statement>
                <feedback>
                    <p>Both I and III are true but II is also true regarding local variables.</p>
                </feedback>
            </choice>

            <choice correct="yes">
                <statement>
                    <p>I, II, and III</p>
                </statement>
                <feedback>
                    <p>Correct! All of the above are true.</p>
                </feedback>
            </choice>

            <choice>
                <statement>
                    <p>II and III only</p>
                </statement>
                <feedback>
                    <p>Both of these are true but I is also true.</p>
                </feedback>
            </choice>
</choices>

    </exercise>

    <exercise label="mid_1_9">
        <statement>

            <p> Which of the following statements are TRUE about <term>static</term> methods?</p>
            <p><ol marker="I">
                <li>
                    <p>Static methods and variables include the keyword static before their name in the header or declaration and can be public or private.</p>
                </li>
                <li>
                    <p>Static methods can access or change the values of instance variables.</p>
                </li>
                <li>
                    <p>Static methods are associated with the class, not objects of the class.</p>
                </li>
            </ol></p>

        </statement>
<choices>

            <choice>
                <statement>
                    <p>I and II only</p>
                </statement>
                <feedback>
                    <p>Static methods cannot acccess instance variables. They can only access static variables.</p>
                </feedback>
            </choice>

            <choice>
                <statement>
                    <p>I, II, and III</p>
                </statement>
                <feedback>
                    <p>Static methods cannot acccess instance variables. They can only access static variables.</p>
                </feedback>
            </choice>

            <choice correct="yes">
                <statement>
                    <p>I and III only</p>
                </statement>
                <feedback>
                    <p>Correct! I and III are true, but static methods cannot acccess instance variables. They can only access static variables.</p>
                </feedback>
            </choice>

            <choice>
                <statement>
                    <p>I only</p>
                </statement>
                <feedback>
                    <p>I is true, but there is another option that is true too.</p>
                </feedback>
            </choice>

            <choice>
                <statement>
                    <p>III only</p>
                </statement>
                <feedback>
                    <p>III is true, but there is another option that is true too.</p>
                </feedback>
            </choice>
</choices>

    </exercise>

    <exercise label="mid_1_10">
        <statement>

            <p> What are the values of <c>var1</c> and <c>var2</c> after the following code segment is executed and the while loop finishes?</p>
            <program language="java"><input>
int var1 = 0;
int var2 = 2;
while ((var2 != 0) &amp;&amp; ((var1 / var2) &gt;= 0))
{
   var1 = var1 + 1;
   var2 = var2 - 1;
}
</input></program>

        </statement>
<choices>

            <choice>
                <statement>
                    <p>var1 = 0, var2 = 2</p>
                </statement>
                <feedback>
                    <p>This would be true if the body of the while loop never executed. This would have happened if the while check was if var1 != 0 instead of var2 != 0</p>
                </feedback>
            </choice>

            <choice>
                <statement>
                    <p>var1 = 1, var2 = 1</p>
                </statement>
                <feedback>
                    <p>This would be true if the body of the while loop only execued one time, but it executes twice.</p>
                </feedback>
            </choice>

            <choice>
                <statement>
                    <p>var1 = 3, var2 = -1</p>
                </statement>
                <feedback>
                    <p>This would be true if the body of the while loop executed three times, but it executes twice.</p>
                </feedback>
            </choice>

            <choice correct="yes">
                <statement>
                    <p>var1 = 2, var2 = 0</p>
                </statement>
                <feedback>
                    <p>Correct!</p>
                </feedback>
            </choice>

            <choice>
                <statement>
                    <p>The loop won't finish executing because of a division by zero.</p>
                </statement>
                <feedback>
                    <p>0/2 won't cause a division by zero. The result is just zero.</p>
                </feedback>
            </choice>
</choices>

    </exercise>

    <exercise label="mid_1_11">
        <statement>

            <p> What does the following code print?</p>
            <program language="java"><input>
int x = -5;
while (x &lt; 0)
{
   x++;
   System.out.print(x + " ");
}
</input></program>

        </statement>
<choices>

            <choice>
                <statement>
                    <p>5 4 3 2 1</p>
                </statement>
                <feedback>
                    <p>x is initialized (set) to -5 to start and incremented (x++) before the print statement executes.</p>
                </feedback>
            </choice>

            <choice>
                <statement>
                    <p>-5 -4 -3 -2 -1</p>
                </statement>
                <feedback>
                    <p>x is incremented (x++) from -5 before the print statement executes.</p>
                </feedback>
            </choice>

            <choice correct="yes">
                <statement>
                    <p>-4 -3 -2 -1 0</p>
                </statement>
                <feedback>
                    <p>Correct!</p>
                </feedback>
            </choice>

            <choice>
                <statement>
                    <p>-5 -4 -3 -2 -1 0</p>
                </statement>
                <feedback>
                    <p>x is incremented (x++) from -5 before the print statement executes.</p>
                </feedback>
            </choice>

            <choice>
                <statement>
                    <p>-4 -3 -2 -1</p>
                </statement>
                <feedback>
                    <p>0 is printed out the last time through the loop when x is -1 and is incremented.</p>
                </feedback>
            </choice>
</choices>

    </exercise>

    <exercise label="mid_1_12">
        <statement>

            <p> What will be printed after this code is executed?</p>
            <program language="java"><input>
for (int i = 0; i &lt;= 15; i++)
{
   if (i % 3 == 0)
   {
      System.out.print(i + " ");
   }
}
</input></program>

        </statement>
<choices>

            <choice>
                <statement>
                    <p>0 3 6 9 12</p>
                </statement>
                <feedback>
                    <p>It would also print 15.</p>
                </feedback>
            </choice>

            <choice>
                <statement>
                    <p>0 1 2 3 4 5</p>
                </statement>
                <feedback>
                    <p>The conditional would only match multiples of three.</p>
                </feedback>
            </choice>

            <choice>
                <statement>
                    <p>1 4 7 10 13</p>
                </statement>
                <feedback>
                    <p>The conditional would only match multiples of three.</p>
                </feedback>
            </choice>

            <choice correct="yes">
                <statement>
                    <p>0 3 6 9 12 15</p>
                </statement>
                <feedback>
                    <p>Yes, the multiples of 3 from 0 to 15.</p>
                </feedback>
            </choice>

            <choice>
                <statement>
                    <p>This code will not print anything.</p>
                </statement>
                <feedback>
                    <p>This code would print the multiples of 3.</p>
                </feedback>
            </choice>
</choices>

    </exercise>

    <exercise label="mid_1_13">
        <statement>

            <p> Consider the following declaration for a class that will be used to represent points in time.  Which of these options correctly implement <c>addMinutes()</c>?</p>
            <program language="java"><input>
public class Timer
{
   private int hours; // number of hours
   private int minutes; // 0 &lt;= minutes &lt; 60

   void addHours(int addition)
   {
      hours = hours + addition;
   }

   /** addMinutes adds the given argument to the time stored in hours and minutes.
   The argument additionMinutes is between 0 and 119.  **/
   void addMinutes(int additionMinutes)
   {
      // implementation not shown
   }

   // ... other methods not shown
}


//Proposed Implementations:
I.   public void addMinutes(int additionMinutes)
     {
         minutes = minutes + additionMinutes;
     }
II.  public void addMinutes(int additionMinutes)
     {
         minutes += additionMinutes;
         if (minutes &gt;= 60)
         {
            hours += minutes / 60;
            minutes = minutes % 60;
         }
     }
III. public void addMinutes(int additionMinutes)
     {
         minutes += additionMinutes;
         while (minutes &gt;= 60)
         {
            hours++;
            minutes -= 60;
         }
     }
IV.  public void addMinutes(int additionMinutes)
     {
         if (additionMinutes + minutes &gt;= 60)
         {
            minutes = additionMinutes + minutes - 60;
            hours += 1;
         }
     }
</input></program>

        </statement>
<choices>

            <choice>
                <statement>
                    <p>I only</p>
                </statement>
                <feedback>
                    <p>This implementation of ``addMinutes`` does not account for values of additionMinutes that push the minute count above 60.</p>
                </feedback>
            </choice>

            <choice>
                <statement>
                    <p>II only</p>
                </statement>
                <feedback>
                    <p>Implementation II works, but implementation III also works.</p>
                </feedback>
            </choice>

            <choice>
                <statement>
                    <p>IV only</p>
                </statement>
                <feedback>
                    <p>Implementation IV does not work for situations where additionMinutes + minutes does not go above 60.</p>
                </feedback>
            </choice>

            <choice correct="yes">
                <statement>
                    <p>II and III</p>
                </statement>
                <feedback>
                    <p>Correct!</p>
                </feedback>
            </choice>

            <choice>
                <statement>
                    <p>I, II, and III</p>
                </statement>
                <feedback>
                    <p>Implementations II and III are correct, but implementation I is not. Implementation I does not account for values of additionMinutes that push the minute account above 60.</p>
                </feedback>
            </choice>
</choices>

    </exercise>

    <exercise label="mid_1_14">
        <statement>

            <p> Which option will evaluate to true, if and only if both a and b are false?</p>

        </statement>
<choices>

            <choice>
                <statement>
                    <p>!(a &amp;&amp; b)</p>
                </statement>
                <feedback>
                    <p>This would be true in any case where a and b weren't both true</p>
                </feedback>
            </choice>

            <choice>
                <statement>
                    <p>!a &amp;&amp; b</p>
                </statement>
                <feedback>
                    <p>If b was false, this option would be false.</p>
                </feedback>
            </choice>

            <choice correct="yes">
                <statement>
                    <p>!a &amp;&amp; !b</p>
                </statement>
                <feedback>
                    <p>Correct!</p>
                </feedback>
            </choice>

            <choice>
                <statement>
                    <p>a &amp;&amp; b</p>
                </statement>
                <feedback>
                    <p>This will only be true only when both a and b are true.</p>
                </feedback>
            </choice>

            <choice>
                <statement>
                    <p>a || !b</p>
                </statement>
                <feedback>
                    <p>This will only be true if a is true, or b is false.</p>
                </feedback>
            </choice>
</choices>

    </exercise>

    <exercise label="mid_1_15">
        <statement>

            <p> What does the method <c>mystery</c> do?</p>
            <program language="java"><input>
public void mystery(String tester)
{
   for (int i = tester.length() - 1; i &gt;= 0; i--)
   {
      System.out.print(tester.substring(i,i+1));
   }
   System.out.println("");
}
</input></program>

        </statement>
<choices>

            <choice correct="yes">
                <statement>
                    <p>Prints the string in reverse order</p>
                </statement>
                <feedback>
                    <p>Correct! This method prints the reversed string.</p>
                </feedback>
            </choice>

            <choice>
                <statement>
                    <p>Deletes the second half of the string</p>
                </statement>
                <feedback>
                    <p>Incorrect, this method prints the parameter reversed.</p>
                </feedback>
            </choice>

            <choice>
                <statement>
                    <p>Prints string normally</p>
                </statement>
                <feedback>
                    <p>Incorrect, this method prints the parameter reversed.</p>
                </feedback>
            </choice>

            <choice>
                <statement>
                    <p>Compile-time error occurs</p>
                </statement>
                <feedback>
                    <p>Incorrect, this method prints the parameter reversed.</p>
                </feedback>
            </choice>

            <choice>
                <statement>
                    <p>Prints alternating characters from beginning and end of the string.</p>
                </statement>
                <feedback>
                    <p>Incorrect, this method prints the parameter reversed.</p>
                </feedback>
            </choice>
</choices>

    </exercise>

    <exercise label="mid_1_16">
        <statement>

            <p> After the following code is executed, what does the variable <c>mystery</c> hold?</p>
            <program language="java"><input>
public class Mysterious
{
    public static void main(String[] args)
    {
        String mystery = "";
        String starter = "Hello World!";
        for (int i = 0; i &lt; starter.length(); i++)
        {
            if (i % 2 == 0)
            {
                mystery += starter.substring(i, i + 1);
            }
        }
    }
}
</input></program>

        </statement>
<choices>

            <choice>
                <statement>
                    <p>"Hello World!"</p>
                </statement>
                <feedback>
                    <p>The variable holds all characters that were stored at even indices for the original phrase.</p>
                </feedback>
            </choice>

            <choice>
                <statement>
                    <p>"Hello "</p>
                </statement>
                <feedback>
                    <p>The variable holds all characters that were stored at even indices for the original phrase.</p>
                </feedback>
            </choice>

            <choice>
                <statement>
                    <p>"He"</p>
                </statement>
                <feedback>
                    <p>The variable holds all characters that were stored at even indices for the original phrase.</p>
                </feedback>
            </choice>

            <choice correct="yes">
                <statement>
                    <p>"HloWrd"</p>
                </statement>
                <feedback>
                    <p>Correct! The variable holds all characters that were stored at even indices for the original phrase.</p>
                </feedback>
            </choice>

            <choice>
                <statement>
                    <p>"el ol!"</p>
                </statement>
                <feedback>
                    <p>The variable holds all characters that were stored at even indices for the original phrase.</p>
                </feedback>
            </choice>
</choices>

    </exercise>

    <exercise label="mid_1_17">
        <statement>

            <p> Which of the following code segments correctly creates an instance of a new <c>Party</c> object?</p>
            <program language="java"><input>
public class Party
{

   private int numInvited;
   private boolean partyCancelled;

   public Party()
   {
      numInvited = 1;
      partyCancelled = false;
   }

   public Party(int invites)
   {
      numInvited = invites;
      partyCancelled = false;
   }
}

I.   Party myParty;
II.  int classSize = 20;
     Party ourParty = new Party(classSize);
III. int numOfFriends = 6;
     Party yourParty = new Party(numOfFriends + 3.0);
</input></program>

        </statement>
<choices>

            <choice>
                <statement>
                    <p>I only</p>
                </statement>
                <feedback>
                    <p>I contains incorrect syntax. Try again!</p>
                </feedback>
            </choice>

            <choice>
                <statement>
                    <p>I and II</p>
                </statement>
                <feedback>
                    <p>I contains incorrect syntax. Try again!</p>
                </feedback>
            </choice>

            <choice correct="yes">
                <statement>
                    <p>II only</p>
                </statement>
                <feedback>
                    <p>Correct! II is the only correct option.</p>
                </feedback>
            </choice>

            <choice>
                <statement>
                    <p>II and III</p>
                </statement>
                <feedback>
                    <p>III is incorrect due to a problem with the constructor argument. Try again!</p>
                </feedback>
            </choice>

            <choice>
                <statement>
                    <p>I, II, and III</p>
                </statement>
                <feedback>
                    <p>Two of these options are incorrect. Take a closer look at the syntax of I and parameters of III.</p>
                </feedback>
            </choice>
</choices>

    </exercise>

    <exercise label="mid_1_18">
        <statement>

            <p> What are the values of <c>a</c> and <c>b</c> after the <c>for</c> loop finishes?</p>
            <program language="java"><input>
int a = 10, b = 3, t = 0;
for (int i = 1; i &lt;= 6; i++)
{
   t = a;
   a = i + b;
   b = t - i;
}
</input></program>

        </statement>
<choices>

            <choice>
                <statement>
                    <p>a = 6 and b = 7</p>
                </statement>
                <feedback>
                    <p>This would be true if the loop stopped when i was equal to 6. Try again!</p>
                </feedback>
            </choice>

            <choice>
                <statement>
                    <p>a = 6 and b = 13</p>
                </statement>
                <feedback>
                    <p>Take another look at how a and b change in each iteration of the loop.</p>
                </feedback>
            </choice>

            <choice correct="yes">
                <statement>
                    <p>a = 13 and b = 0</p>
                </statement>
                <feedback>
                    <p>Correct!</p>
                </feedback>
            </choice>

            <choice>
                <statement>
                    <p>a = 6 and b = 0</p>
                </statement>
                <feedback>
                    <p>Almost there! b = 0, but take another look at how a changes in each iteration of the loop.</p>
                </feedback>
            </choice>

            <choice>
                <statement>
                    <p>a = 0 and b = 13</p>
                </statement>
                <feedback>
                    <p>Take another look at how a and b change within each iteration of the loop. You are close!</p>
                </feedback>
            </choice>
</choices>

    </exercise>

    <exercise label="mid_1_19">
        <statement>

            <p> Consider the following code.  What string is referenced by <c>s1</c> after the code executes?</p>
            <program language="java"><input>
String s1 = "Hi There";
String s2 = s1;
String s3 = s2;
String s4 = s1;
s2 = s2.toLowerCase();
s3 = s3.toUpperCase();
s4 = null;
</input></program>

        </statement>
<choices>

            <choice>
                <statement>
                    <p>hi there</p>
                </statement>
                <feedback>
                    <p>Strings are immutable and so any change to a string returns a new string.</p>
                </feedback>
            </choice>

            <choice>
                <statement>
                    <p>HI THERE</p>
                </statement>
                <feedback>
                    <p>Strings are immutable and so any change to a string returns a new string.</p>
                </feedback>
            </choice>

            <choice correct="yes">
                <statement>
                    <p>Hi There</p>
                </statement>
                <feedback>
                    <p>Correct!</p>
                </feedback>
            </choice>

            <choice>
                <statement>
                    <p>null</p>
                </statement>
                <feedback>
                    <p>Strings are immutable and so any changes to a string returns a new string.</p>
                </feedback>
            </choice>

            <choice>
                <statement>
                    <p>hI tHERE</p>
                </statement>
                <feedback>
                    <p>Strings are immutable and so any changes to a string returns a new string.</p>
                </feedback>
            </choice>
</choices>

    </exercise>

    <exercise label="mid_1_20">
        <statement>

            <p> Given following code, which of the following statements is a valid assignment statement using these variables?</p>
            <program language="java"><input>
int a = 5;
int b = 3;
int c = 4;
</input></program>

        </statement>
<choices>

            <choice>
                <statement>
                    <p>a = 6.7</p>
                </statement>
                <feedback>
                    <p>Check the data type of a.</p>
                </feedback>
            </choice>

            <choice>
                <statement>
                    <p>b = 87.7</p>
                </statement>
                <feedback>
                    <p>Check the data type of b.</p>
                </feedback>
            </choice>

            <choice>
                <statement>
                    <p>12 = c * b</p>
                </statement>
                <feedback>
                    <p>Assignment statements must have a variable on the left.</p>
                </feedback>
            </choice>

            <choice correct="yes">
                <statement>
                    <p>c = a - b</p>
                </statement>
                <feedback>
                    <p>Correct!</p>
                </feedback>
            </choice>
</choices>

    </exercise>
        </exercises>
    </section>
