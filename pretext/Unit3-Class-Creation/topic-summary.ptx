<?xml version="1.0"?>
<!-- Generated by Docutils 0.17.1 -->
<section xml:id="topic-summary">
  <title>Unit 3 Summary</title><introduction>
    
  </introduction>
  <subsection>
            <title>Concept Summary</title>
            <p><ul>
                <li>
                    <p><term>Class</term> - A class defines a type and is used to define what all objects of that class know and can do.</p>
                </li>
                <li>
                    <p><term>Compiler</term> - Software that translates the Java source code (ends in .java) into the Java class file (ends in .class).</p>
                </li>
                <li>
                    <p><term>Compile time error</term> - An error that is found during the compilation.  These are also called syntax errors.</p>
                </li>
                <li>
                    <p><term>Constructor</term> - Used to initialize fields in a newly created object.</p>
                </li>
                <li>
                    <p><term>Field</term> - A field holds data or a property - what an object knows or keeps track of.</p>
                </li>
                <li>
                    <p><term>Java</term> - A programming language that you can use to tell a computer what to do.</p>
                </li>
                <li>
                    <p><term>Main Method</term> - Where execution starts in a Java program.</p>
                </li>
                <li>
                    <p><term>Method</term> - Defines behavior - what an object can do.</p>
                </li>
                <li>
                    <p><term>Object</term> - Objects do the actual work in an object-oriented program.</p>
                </li>
                <li>
                    <p><term>Syntax Error</term> - A syntax error is an error in the specification of the program.</p>
                </li>
            </ul></p>
        </subsection>
  <subsection>
            <title>Java Keyword Summary</title>
            <p><ul>
                <li>
                    <p><term>class</term> - used to define a new class</p>
                </li>
                <li>
                    <p><term>public</term> - a visibility keyword which is used to control the classes that have access.  The keyword public means the code in any class has direct access.</p>
                </li>
                <li>
                    <p><term>private</term> - a visibility keyword which is used to control the classes that have access.  The keyword private means that only the code in the current class has direct access.</p>
                </li>
            </ul></p>
        </subsection>
  <subsection>
            <title>Vocabulary Practice</title>

<exercise label="ch2_vocab1">
    <statement><p>Drag the definition from the left and drop it on the correct concept on the right.  Click the "Check Me" button to see if you are correct</p></statement>
    <feedback><p>Review the summaries above.</p></feedback>
<matches><match order="1"><premise>does the actual work in an object-oriented program.</premise><response>object</response></match><match order="2"><premise>defines a type</premise><response>class</response></match><match order="3"><premise>A programming language that you can use to tell a computer what to do.</premise><response>Java</response></match><match order="4"><premise>Translates a Java source file (ends in .java) into a Java class file (ends in .class)</premise><response>compiler</response></match></matches></exercise>
<exercise label="ch2_vocab2">
    <statement><p>Drag the definition from the left and drop it on the correct concept on the right.  Click the "Check Me" button to see if you are correct.</p></statement>
    <feedback><p>Review the summaries above.</p></feedback>
<matches><match order="1"><premise>initializes the fields of an object after it has been created</premise><response>constructor</response></match><match order="2"><premise>defines behavior</premise><response>method</response></match><match order="3"><premise>holds data or a property</premise><response>field</response></match><match order="4"><premise>where execution starts</premise><response>main method</response></match></matches></exercise>            <p>For more practice, see this <url href="https://quizlet.com/434080544/cs-awesome-unit-5-vocabulary-flash-cards/" visual="https://quizlet.com/434080544/cs-awesome-unit-5-vocabulary-flash-cards/">Quizlet</url>.</p>
        </subsection>
  <subsection>
            <title>Common Mistakes</title>
            <p><ul>
                <li>
                    <p>Forgetting to declare an object to call its methods.</p>
                </li>
                <li>
                    <p>Forgetting to write get/set methods for private instance variables.</p>
                </li>
                <li>
                    <p>Forgetting to write a constructor.</p>
                </li>
                <li>
                    <p>Mismatch in name, number, type, order of arguments and return type between the  method definition and the method call.</p>
                </li>
                <li>
                    <p>Forgetting data types for every argument in the method definition.</p>
                </li>
                <li>
                    <p>Forgetting to use what the method returns.</p>
                </li>
            </ul></p>
        </subsection>
</section>
