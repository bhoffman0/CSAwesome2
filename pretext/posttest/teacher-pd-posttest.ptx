<?xml version="1.0"?>
<!-- Generated by Docutils 0.17.1 -->
<section xml:id="teacher-pd-post-test-for-units-1-6">
        <title>Teacher PD Post Test for Units 1-6</title>
        <p>Please complete the following post-test for Units 1-6.</p>
        <exercises time-limit="" feedback="no">

    <exercise label="PDposttest1">
        <statement>

            <p> Unit 1 Primitive Types Skills and Learning Objectives:</p>
            <p><ul>
                <li>
                    <p>Skill 5.B: Explain why a code segment will not compile or work as intended.</p>
                </li>
                <li>
                    <p>MOD-1.A: Call System class methods to generate output to the console.</p>
                </li>
            </ul></p>
            <p>Consider the following code segment.</p>
            <program language="java"><input>
System.out.print(Take all the courses in your curriculum.);
System.out.println(Ask questions.);
System.out.println(--Katherine Johnson);
</input></program>
            <p>The code segment is intended to produce the following output but does not work as intended.</p>
            <program language="java"><input>
Take all the courses in your curriculum. Ask questions.
--Katherine Johnson
</input></program>
            <p>Which changes should be made so that the code segment produces the intended output?</p>
            <program language="java"><input>
I.   In line 1, print should be changed to println.
II.  In lines 1, 2, and 3, print should be capitalized.
III. In lines 1, 2, and 3, the text inside the parentheses should be in quotation marks.
</input></program>
</statement><choices><choice><statement id="PDposttest1_opt_a">            <p>I only</p>
</statement><feedback id="PDposttest1_opt_a">
            <p>print is correct since a new line is not printed after the first line of output.</p>
</feedback></choice><choice><statement id="PDposttest1_opt_b">            <p>II only</p>
</statement><feedback id="PDposttest1_opt_b">
            <p>Only class names like System are capitalized.</p>
</feedback></choice><choice correct="yes"><statement id="PDposttest1_opt_c">            <p>III only</p>
</statement><feedback id="PDposttest1_opt_c">
            <p>Correct.</p>
</feedback></choice><choice><statement id="PDposttest1_opt_d">            <p>I and II</p>
</statement><feedback id="PDposttest1_opt_d">
            <p>I and II are not correct.</p>
</feedback></choice><choice><statement id="PDposttest1_opt_e">            <p>I and III</p>
</statement><feedback id="PDposttest1_opt_e">
            <p>print is correct since a new line is not printed after the first line of output.</p>
</feedback></choice></choices>

    </exercise>

    <exercise label="PDposttest2">
        <statement>

            <p> Unit 1 Primitive Types (Expressions) Skills and Learning Objectives:</p>
            <p><ul>
                <li>
                    <p>VAR-1.C: Declare variables of the correct types to represent primitive data.</p>
                </li>
                <li>
                    <p>CON-1: The way variables and operators are sequenced and combined in an expression determines the computed result.</p>
                </li>
                <li>
                    <p>Skill 2.B: Determine the result or output based on statement execution order in a code segment without method calls.</p>
                </li>
            </ul></p>
            <p>Consider the following code segment:</p>
            <program language="java"><input>
int x = 16;
double y = 8.0;
int z = 2;
x = x / 5;
y += x;
y = y * z;
</input></program>
            <p>What is the value in variable y when the code segment is executed?</p>
</statement><choices><choice><statement id="PDposttest2_opt_a">            <p>2</p>
</statement><feedback id="PDposttest2_opt_a">
            <p>Trace through the code keeping track of the variable values.</p>
</feedback></choice><choice><statement id="PDposttest2_opt_b">            <p>8</p>
</statement><feedback id="PDposttest2_opt_b">
            <p>Trace through the code keeping track of the variable values.</p>
</feedback></choice><choice><statement id="PDposttest2_opt_c">            <p>11</p>
</statement><feedback id="PDposttest2_opt_c">
            <p>Trace through the code keeping track of the variable values.</p>
</feedback></choice><choice correct="yes"><statement id="PDposttest2_opt_d">            <p>22.0</p>
</statement><feedback id="PDposttest2_opt_d">
            <p>Correct. Integer division is used.</p>
</feedback></choice><choice><statement id="PDposttest2_opt_e">            <p>22.4</p>
</statement><feedback id="PDposttest2_opt_e">
            <p>Integer division is used since x is an int.</p>
</feedback></choice></choices>

    </exercise>

    <exercise label="PDposttest3">
        <statement>

            <p> Unit 2 Using Objects (Constructors) Skills and Learning Objectives:</p>
            <p><ul>
                <li>
                    <p>Skill 3.A: Write program code to create objects of a class and call their methods.</p>
                </li>
                <li>
                    <p>VAR-1.D: Define variables of the correct types to represent reference data.</p>
                </li>
                <li>
                    <p>MOD-1.D: Create objects by calling constructors with or without parameters.</p>
                </li>
            </ul></p>
            <p>Consider the following code segment.</p>
            <program language="java"><input>
public class Party
{
    private int numInvited;
    private boolean partyCancelled;

    public Party()
    {
        numInvited = 1;
        partyCancelled = false;
    }

    public Party(int invites)
    {
        numInvited = invites;
        partyCancelled = false;
    }
}
</input></program>
            <p>Which of the following code segments, when placed in a method in a class other than the Party class, correctly creates a new object of the Party class with 20 people invited?</p>
            <program language="java"><input>
I.   Party myParty.numInvited = 20;
II.  Party ourParty = new Party(20);
III. Party otherParty = new Party();
     otherParty.numInvited = 20;
</input></program>
</statement><choices><choice><statement id="PDposttest3_opt_a">            <p>I only</p>
</statement><feedback id="PDposttest3_opt_a">
            <p>Private instance variables like numInvited are not accessible outside of the class.</p>
</feedback></choice><choice correct="yes"><statement id="PDposttest3_opt_b">            <p>II only</p>
</statement><feedback id="PDposttest3_opt_b">
            <p>Correct. The constructor initializes the private instance variable.</p>
</feedback></choice><choice><statement id="PDposttest3_opt_c">            <p>III only</p>
</statement><feedback id="PDposttest3_opt_c">
            <p>Private instance variables like numInvited are not accessible outside of the class.</p>
</feedback></choice><choice><statement id="PDposttest3_opt_d">            <p>II and III</p>
</statement><feedback id="PDposttest3_opt_d">
            <p>Private instance variables like numInvited are not accessible outside of the class.</p>
</feedback></choice><choice><statement id="PDposttest3_opt_e">            <p>I, II, and III</p>
</statement><feedback id="PDposttest3_opt_e">
            <p>Private instance variables like numInvited are not accessible outside of the class.</p>
</feedback></choice></choices>

    </exercise>

    <exercise label="PDposttest4">
        <statement>

            <p> Unit 2 Using Objects (Methods) Skills and Learning Objectives:</p>
            <p><ul>
                <li>
                    <p>Skill 3.A: Write program code to create objects of a class and call their methods.</p>
                </li>
                <li>
                    <p>MOD-1.B: Explain the relationship between a class and an object.</p>
                </li>
            </ul></p>
            <p>Consider the following class.</p>
            <program language="java"><input>
public class Liquid
{
    private double freezingPoint;
    private double currentTemp;

    public Liquid()
    {
        freezingPoint = 0;
        currentTemp = 0;
    }

    public void lowerTemp(double degrees)
    {
        currentTemp -= degrees;
    }

    public void raiseTemp(double degrees)
    {
        currentTemp += degrees;
    }

    void freeze()
    {
        currentTemp = freezingPoint;
    }
}
</input></program>
            <p>Assume that the following Liquid object has been declared.</p>
            <program language="java"><input>
Liquid liquid = new Liquid();
</input></program>
            <p>Which of the following statements is valid?</p>
</statement><choices><choice><statement id="PDposttest4_opt_a">            <p>Liquid.freezingPoint;</p>
</statement><feedback id="PDposttest4_opt_a">
            <p>Private non-static instance variables like freezingPoint are not accessible outside of the class.</p>
</feedback></choice><choice><statement id="PDposttest4_opt_b">            <p>liquid.currentTemp();</p>
</statement><feedback id="PDposttest4_opt_b">
            <p>currentTemp is not a method.</p>
</feedback></choice><choice><statement id="PDposttest4_opt_c">            <p>liquid.lowerTemp();</p>
</statement><feedback id="PDposttest4_opt_c">
            <p>The lowerTemp method requires an argument.</p>
</feedback></choice><choice correct="yes"><statement id="PDposttest4_opt_d">            <p>liquid.raiseTemp(10);</p>
</statement><feedback id="PDposttest4_opt_d">
            <p>Correct!</p>
</feedback></choice><choice><statement id="PDposttest4_opt_e">            <p>liquid.freeze(10)</p>
</statement><feedback id="PDposttest4_opt_e">
            <p>The freeze method does not have a parameter.</p>
</feedback></choice></choices>

    </exercise>

    <exercise label="PDposttest5">
        <statement>

            <p> Unit 4 If Statements and Boolean Operators Skills and Learning Objectives:</p>
            <p><ul>
                <li>
                    <p>CON-1.E: Evaluate Boolean expressions that use relational operators in program code.</p>
                </li>
                <li>
                    <p>CON-1.F: Evaluate compound Boolean expressions in program code.</p>
                </li>
                <li>
                    <p>Skill 2.B  Determine the result or output based on statement execution order in a code segment without method calls.</p>
                </li>
            </ul></p>
            <p>Consider the following code segment. Assume boolean variables p and q have been initialized.</p>
            <program language="java"><input>
if (!p || q)
{
  System.out.print("winner");
}
</input></program>
            <p>For what values of p and q will “winner” be printed?</p>
</statement><choices><choice correct="yes"><statement id="PDposttest5_opt_a">            <p>“winner” will be printed when p is false, regardless of the value of q.</p>
</statement><feedback id="PDposttest5_opt_a">
            <p>The boolean expression is not p or q.</p>
</feedback></choice><choice><statement id="PDposttest5_opt_b">            <p>“winner” will be printed when q is false, regardless of the value of p.</p>
</statement><feedback id="PDposttest5_opt_b">
            <p>p has to be false or q has to be true.</p>
</feedback></choice><choice><statement id="PDposttest5_opt_c">            <p>“winner” will be printed only when p is false and q is true.</p>
</statement><feedback id="PDposttest5_opt_c">
            <p>|| means or, not and.</p>
</feedback></choice><choice><statement id="PDposttest5_opt_d">            <p>“winner” will always be printed.</p>
</statement><feedback id="PDposttest5_opt_d">
            <p>p has to be false or q has to be true.</p>
</feedback></choice><choice><statement id="PDposttest5_opt_e">            <p>“winner” will never be printed.</p>
</statement><feedback id="PDposttest5_opt_e">
            <p>It will be printed if p is false or q is true.</p>
</feedback></choice></choices>

    </exercise>

    <exercise label="PDposttest6">
        <statement>

            <p> Unit 4 If Statements Skills and Learning Objectives:</p>
            <p><ul>
                <li>
                    <p>CON-2.A: Represent branching logical processes by using  conditional statements.</p>
                </li>
                <li>
                    <p>CON-2.B: Represent branching logical processes by using nested conditional statements.</p>
                </li>
                <li>
                    <p>Skill 3.C  Write program code to satisfy method specifications using expressions, conditional statements, and iterative statements.</p>
                </li>
            </ul></p>
            <p>Consider the following code segment.</p>
            <program language="java"><input>
int a = 100;
int b = 90;
if (a &gt;= 100)
{
   if (b &gt; 100)
   {
      System.out.print("go ");
   }
   else if (b &gt; 90)
   {
     System.out.print("it ");
   }
   else
   {
      System.out.print("up ");
   }
}
System.out.print("on ");
</input></program>
            <p>What is printed when the code segment above is executed?</p>
</statement><choices><choice><statement id="PDposttest6_opt_a">            <p>go on</p>
</statement><feedback id="PDposttest6_opt_a">
            <p>b is not greater than 100.</p>
</feedback></choice><choice><statement id="PDposttest6_opt_b">            <p>it up on</p>
</statement><feedback id="PDposttest6_opt_b">
            <p>b is not greater than 90.</p>
</feedback></choice><choice><statement id="PDposttest6_opt_c">            <p>it on</p>
</statement><feedback id="PDposttest6_opt_c">
            <p>b is not greater than 90.</p>
</feedback></choice><choice correct="yes"><statement id="PDposttest6_opt_d">            <p>up on</p>
</statement><feedback id="PDposttest6_opt_d">
            <p>Correct.</p>
</feedback></choice><choice><statement id="PDposttest6_opt_e">            <p>on</p>
</statement><feedback id="PDposttest6_opt_e">
            <p>The first if statement is true since a is = 100.</p>
</feedback></choice></choices>

    </exercise>

    <exercise label="PDposttest7">
        <statement>

            <p> Unit 4 Loops Skills and Learning Objectives:</p>
            <p><ul>
                <li>
                    <p>CON-2.E Represent iterative processes using a for loop.</p>
                </li>
                <li>
                    <p>Skill 3.C  Write program code to satisfy method specifications using expressions, conditional statements, and iterative statements.</p>
                </li>
            </ul></p>
            <p>Complete the loop below by filling in the missing code. The loop should calculate the number of leap years between the variables year1 and year2, inclusive, using a helper method isLeapYear(year) which returns true if year is a leap year and false otherwise.</p>
            <program language="java"><input>
int year1 = 2000;
int year2 = 2020;
int count = 0;

/* Missing Code */
{
      if (isLeapYear(y))
          count++;
}
</input></program>
</statement><choices><choice><statement id="PDposttest7_opt_a">            <p>for (int year1 = 2000; int year2 = 2020; count++)</p>
</statement><feedback id="PDposttest7_opt_a">
            <p>The for-loop should initialize, test, and increment the loop variable y.</p>
</feedback></choice><choice><statement id="PDposttest7_opt_b">            <p>for (int y = year2 - year1; y &lt; year2; y++)</p>
</statement><feedback id="PDposttest7_opt_b">
            <p>y should start counting from year1.</p>
</feedback></choice><choice correct="yes"><statement id="PDposttest7_opt_c">            <p>for (int y = year1; y &lt;= year2; y++)</p>
</statement><feedback id="PDposttest7_opt_c">
            <p>Correct. The for loops counts from year1 to year2.</p>
</feedback></choice><choice><statement id="PDposttest7_opt_d">            <p>for (int year1 = 2000; year1 &lt; year2; year1++)</p>
</statement><feedback id="PDposttest7_opt_d">
            <p>The for-loop should initialize, test, and increment the loop variable y.</p>
</feedback></choice><choice><statement id="PDposttest7_opt_e">            <p>for (int year1; year2; count++)</p>
</statement><feedback id="PDposttest7_opt_e">
            <p>The for-loop should initialize, test, and increment the loop variable y.</p>
</feedback></choice></choices>

    </exercise>

    <exercise label="PDposttest8">
        <statement>

            <p> Unit 4 Loops Skills and Learning Objectives:</p>
            <p><ul>
                <li>
                    <p>CON-2.E Represent iterative processes using a for loop.</p>
                </li>
                <li>
                    <p>Skill 3.C  Write program code to satisfy method specifications using expressions, conditional statements, and iterative statements.</p>
                </li>
                <li>
                    <p>CON-2.F.1 There are standard algorithms that utilize String traversals.</p>
                </li>
            </ul></p>
            <p>Consider the following method.</p>
            <program language="java"><input>
public static String changeStr(String str)
{
     String result = "";
     for (int i = 1; i &lt; str.length() - 1; i += 2)
     {
          result += str.substring(i, i + 1);
     }
     return result;
}
</input></program>
            <p>What value is returned as a result of the method call <term>changeStr(“ABCDE”)</term>?</p>
</statement><choices><choice><statement id="PDposttest8_opt_a">            <p>“ABCDE”</p>
</statement><feedback id="PDposttest8_opt_a">
            <p>The for-loop increments the string index i by 2’s, visiting every other character.</p>
</feedback></choice><choice><statement id="PDposttest8_opt_b">            <p>“BCDE”</p>
</statement><feedback id="PDposttest8_opt_b">
            <p>The for-loop increments the string index i by 2’s, visiting every other character.</p>
</feedback></choice><choice><statement id="PDposttest8_opt_c">            <p>“AC”</p>
</statement><feedback id="PDposttest8_opt_c">
            <p>The character A is at index 0, but the loop starts at index 1.</p>
</feedback></choice><choice correct="yes"><statement id="PDposttest8_opt_d">            <p>“BD”</p>
</statement><feedback id="PDposttest8_opt_d">
            <p>Correct. The for-loop increments the string index i by 2’s, visiting every other character, starting at index 1 (the second character).</p>
</feedback></choice><choice><statement id="PDposttest8_opt_e">            <p>“ACE”</p>
</statement><feedback id="PDposttest8_opt_e">
            <p>The character A is at index 0, but the loop starts at index 1.</p>
</feedback></choice></choices>

    </exercise>

    <exercise label="PDposttest9">
        <statement>

            <p> Unit 5 Writing Classes Skills and Learning Objectives:</p>
            <p><ul>
                <li>
                    <p>Skill 3B: Write program code to define a new type by creating a class.</p>
                </li>
                <li>
                    <p>MOD-2: Programmers use code to represent a physical object or nonphysical concept, real or imagined, by defining a class based on the attributes and/or behaviors of the object or concept.</p>
                </li>
                <li>
                    <p>MOD-2.A: Designate access and visibility constraints to classes, data, constructors, and methods.</p>
                </li>
                <li>
                    <p>MOD-2.B: Define instance variables for the attributes to be initialized through the constructors of a class.</p>
                </li>
            </ul></p>
            <p>Consider the following class Cat:</p>
            <program language="java"><input>
public class Cat
{
    /* missing code */
}
</input></program>
            <p>Which of the following replacements for the missing code is the most appropriate implementation of a class Cat which contains attributes for the cat’s name and age and a constructor?</p>
</statement><choices><choice><statement id="PDposttest9_opt_a">            <program language="java"><input>
public String name;
public int age;
public Cat(String name, int age)
{
  name = name;
  age = age;
}
</input></program>
</statement><feedback id="PDposttest9_opt_a">
            <p>The parameters of the constructor cannot be the same variables as the instance variables, and the instance variables should be private.</p>
</feedback></choice><choice correct="yes"><statement id="PDposttest9_opt_b">            <program language="java"><input>
private String name;
private int age;
public Cat(String n, int a)
{
  name = n;
  age = a;
}
</input></program>
</statement><feedback id="PDposttest9_opt_b">
            <p>Correct. The constructor initializes the instance variables to the parameter variables.</p>
</feedback></choice><choice><statement id="PDposttest9_opt_c">            <program language="java"><input>
public String name;
public int age;
public Cat(String n, int a)
{
  name = n;
  age = a;
}
</input></program>
</statement><feedback id="PDposttest9_opt_c">
            <p>The instance variables should be private.</p>
</feedback></choice><choice><statement id="PDposttest9_opt_d">            <program language="java"><input>
private String name;
private int age;
public Cat(String n, int a)
{
  n = name;
  a = age;
}
</input></program>
</statement><feedback id="PDposttest9_opt_d">
            <p>name should be set to n, not the n to name.</p>
</feedback></choice><choice><statement id="PDposttest9_opt_e">            <program language="java"><input>
public String name;
public int age;
public Cat(String n, int a)
{
  n = name;
  a = age;
}
</input></program>
</statement><feedback id="PDposttest9_opt_e">
            <p>name should be set to n, not the n to name, and the instance variables should be private.</p>
</feedback></choice></choices>

    </exercise>

    <exercise label="PDposttest10">
        <statement>

            <p> Unit 5 Writing Classes Skills and Learning Objectives:</p>
            <p><ul>
                <li>
                    <p>Skill 3B: Write program code to define a new type by creating a class.</p>
                </li>
                <li>
                    <p>MOD-2.E: Define behaviors of an object through methods with or without parameters written in a class.</p>
                </li>
            </ul></p>
            <p>Which of the following is the most appropriate header for a method that would set the value of the private instance variable y?</p>
</statement><choices><choice><statement id="PDposttest10_opt_a">            <p>private int setY(int value)</p>
</statement><feedback id="PDposttest10_opt_a">
            <p>The set method should be public.</p>
</feedback></choice><choice><statement id="PDposttest10_opt_b">            <p>private void setY()</p>
</statement><feedback id="PDposttest10_opt_b">
            <p>The set method should be public.</p>
</feedback></choice><choice><statement id="PDposttest10_opt_c">            <p>public int setY()</p>
</statement><feedback id="PDposttest10_opt_c">
            <p>The set method needs a parameter to set y to.</p>
</feedback></choice><choice><statement id="PDposttest10_opt_d">            <p>public void setY()</p>
</statement><feedback id="PDposttest10_opt_d">
            <p>The set method needs a parameter to set y to.</p>
</feedback></choice><choice correct="yes"><statement id="PDposttest10_opt_e">            <p>public void setY(int value)</p>
</statement><feedback id="PDposttest10_opt_e">
            <p>Correct. The public set method sets the instance variable y to the parameter value.</p>
</feedback></choice></choices>

    </exercise>

    <exercise label="PDposttest11">
        <statement>

            <p> Unit 5 Writing Classes Skills and Learning Objectives:</p>
            <p><ul>
                <li>
                    <p>Skill 3B: Write program code to define a new type by creating a class.</p>
                </li>
                <li>
                    <p>Skill 4.B  Identify errors in program code.</p>
                </li>
                <li>
                    <p>MOD-2.D: Define behaviors of an object through non-void methods without parameters written in a class.</p>
                </li>
            </ul></p>
            <p>Consider the following class definition. The class does not compile.</p>
            <program language="java"><input>
public class Student
{
    private int id;

    public void getId()
    {
        return id;
    }
}
</input></program>
            <p>The accessor method getId is intended to return the id of a Student object. Which of the following best explains why the class does not compile?</p>
</statement><choices><choice><statement id="PDposttest11_opt_a">            <p>The getId method should be declared as private.</p>
</statement><feedback id="PDposttest11_opt_a">
            <p>It should be public.</p>
</feedback></choice><choice><statement id="PDposttest11_opt_b">            <p>The getId method should have a parameter.</p>
</statement><feedback id="PDposttest11_opt_b">
            <p>It does not need a parameter.</p>
</feedback></choice><choice><statement id="PDposttest11_opt_c">            <p>The getId method should not return a value.</p>
</statement><feedback id="PDposttest11_opt_c">
            <p>It needs to return id.</p>
</feedback></choice><choice><statement id="PDposttest11_opt_d">            <p>The getId method should not have a return type.</p>
</statement><feedback id="PDposttest11_opt_d">
            <p>It needs a return type for the value it returns.</p>
</feedback></choice><choice correct="yes"><statement id="PDposttest11_opt_e">            <p>The getId method should have int as its return type.</p>
</statement><feedback id="PDposttest11_opt_e">
            <p>Correct.</p>
</feedback></choice></choices>

    </exercise>

    <exercise label="PDposttest12">
        <statement>

            <p> Unit 6 Arrays Skills and Learning Objectives:</p>
            <p><ul>
                <li>
                    <p>Skill 3.D: Write program code to create, traverse, and manipulate elements in 1D array or ArrayList objects.</p>
                </li>
                <li>
                    <p>VAR-2.B Traverse the elements in a 1D array.</p>
                </li>
                <li>
                    <p>Skill 4.B  Identify errors in program code</p>
                </li>
            </ul></p>
            <p>Consider an integer array which has been declared and initialized with one or more integer values such as:</p>
            <program language="java"><input>
int[] array =  { 10, 20, 30 };
</input></program>
            <p>Which of the following code segments doubles all the values in the array?</p>
            <program language="java"><input>
I. int i = 0;
   while (i &lt; array.length)
   {
       array[i] *= 2;
   }
II. for (int i = 0; i &lt; array.length; i++)
    {
        array[i] *= 2;
    }
III. for (int i = 1; i &lt;= array.length; i++)
     {
          array[i] *= 2;
     }
</input></program>
</statement><choices><choice><statement id="PDposttest12_opt_a">            <p>I only</p>
</statement><feedback id="PDposttest12_opt_a">
            <p>This is an infinite loop. i needs to be incremented.</p>
</feedback></choice><choice correct="yes"><statement id="PDposttest12_opt_b">            <p>II only</p>
</statement><feedback id="PDposttest12_opt_b">
            <p>Correct.</p>
</feedback></choice><choice><statement id="PDposttest12_opt_c">            <p>III only</p>
</statement><feedback id="PDposttest12_opt_c">
            <p>This loop will give an index out of bounds error. Arrays are indexed starting at 0 and up until array.length.</p>
</feedback></choice><choice><statement id="PDposttest12_opt_d">            <p>I and II only</p>
</statement><feedback id="PDposttest12_opt_d">
            <p>I is an infinite loop. i needs to be incremented.</p>
</feedback></choice><choice><statement id="PDposttest12_opt_e">            <p>I, II, and III</p>
</statement><feedback id="PDposttest12_opt_e">
            <p>I is an infinite loop. III will have an array index out of bounds error.</p>
</feedback></choice></choices>

    </exercise>

    <exercise label="PDposttest13">
        <statement>

            <p> Unit 6 Arrays Skills and Learning Objectives:</p>
            <p><ul>
                <li>
                    <p>Skill 3.D: Write program code to create, traverse, and manipulate elements in 1D array or ArrayList objects.</p>
                </li>
                <li>
                    <p>VAR-2.B Traverse the elements in a 1D array.</p>
                </li>
                <li>
                    <p>CON-2.I.1 There are standard algorithms that utilize array traversals.</p>
                </li>
            </ul></p>
            <p>Consider the following method. Which of the following statements best describes when it returns true?</p>
            <program language="java"><input>
public boolean mystery(int array[], int value)
{
     boolean temp = false;
     for (int i = 0; i &lt; array.length; i++)
     {
        temp = (array[i] == value);
     }
     return temp;
}
</input></program>
</statement><choices><choice><statement id="PDposttest13_opt_a">            <p>Whenever the first element in array is equal to value</p>
</statement><feedback id="PDposttest13_opt_a">
            <p>temp will change its value as each element in the array is visited.</p>
</feedback></choice><choice><statement id="PDposttest13_opt_b">            <p>Whenever array contains any element which equals value</p>
</statement><feedback id="PDposttest13_opt_b">
            <p>temp will change its value as each element in the array is visited, so it may change after finding an element which equals value.</p>
</feedback></choice><choice correct="yes"><statement id="PDposttest13_opt_c">            <p>Whenever the last element in array is equal to value</p>
</statement><feedback id="PDposttest13_opt_c">
            <p>Correct. temp will change its value as each element in the array is visited.</p>
</feedback></choice><choice><statement id="PDposttest13_opt_d">            <p>Whenever more than 1 element in array is equal to value</p>
</statement><feedback id="PDposttest13_opt_d">
            <p>If the 1 element is the last element, it will still return true.</p>
</feedback></choice><choice><statement id="PDposttest13_opt_e">            <p>Whenever exactly 1 element in array is equal to value</p>
</statement><feedback id="PDposttest13_opt_e">
            <p>Many elements can be equal to value, as long as the last one is equal.</p>
</feedback></choice></choices>

    </exercise>
        </exercises>
    </section>
