<?xml version="1.0"?>
<!-- Generated by Docutils 0.17.1 -->
<section xml:id="listHardMC">
        <title>ArrayList Hard Multiple Choice Questions</title>
        <p>These problems are about the same or harder than those you will see on the AP CSA exam.</p>

    <exercise label="qalh_1">
        <statement>

        <p> What is in the list <c>nums</c> if it initially contained {5, 3, 1} and the following code is executed?</p>
        <program language="java"><code>
nums.add(6);
nums.add(0,4);
nums.remove(1);
</code></program>

        </statement>
<choices>

            <choice>
                <statement>
                    <p>[5, 3, 1, 6]</p>
                </statement>
                <feedback>
                    <p>The remove(1) removes the item at index 1 which will be 5 after the 4 is added at index 0.</p>
                </feedback>
            </choice>

            <choice correct="yes">
                <statement>
                    <p>[4, 3, 1, 6]</p>
                </statement>
                <feedback>
                    <p>The add(6) adds the 6 at the end of the list. The add(0,4) will add 4 at index 0. The remove(1) removes the 5 at index 1.</p>
                </feedback>
            </choice>

            <choice>
                <statement>
                    <p>[4, 3, 6]</p>
                </statement>
                <feedback>
                    <p>The remove(1) doesn't remove the 1, it removes the value at index 1.</p>
                </feedback>
            </choice>

            <choice>
                <statement>
                    <p>[5, 3, 6]</p>
                </statement>
                <feedback>
                    <p>The 5 will be removed with the remove(1).</p>
                </feedback>
            </choice>

            <choice>
                <statement>
                    <p>[4, 5, 3, 6]</p>
                </statement>
                <feedback>
                    <p>This would be true if remove(1) removed the item with that value, but it removes the item at that index.</p>
                </feedback>
            </choice>
</choices>

    </exercise>
        <p>You can step through the code above by clicking on the following <url href="http://cscircles.cemc.uwaterloo.ca/java_visualize/#code=import+java.util.*%3B%0Apublic+class+Test+%7B%0A+++public+static+void+main(String%5B%5D+args)+%7B%0A++++++List%3CInteger%3E+nums+%3D+new+ArrayList%3CInteger%3E()%3B%0A++++++nums.add(5)%3B%0A++++++System.out.println(nums)%3B%0A++++++nums.add(3)%3B%0A++++++System.out.println(nums)%3B%0A++++++nums.add(1)%3B%0A++++++System.out.println(nums)%3B%0A++++++nums.add(6)%3B%0A++++++System.out.println(nums)%3B%0A++++++nums.add(0,4)%3B%0A++++++System.out.println(nums)%3B%0A++++++nums.remove(1)%3B%0A++++++System.out.println(nums)%3B%0A+++%7D%0A%7D&amp;mode=display&amp;curInstr=0" visual="http://cscircles.cemc.uwaterloo.ca/java_visualize/#code=import+java.util.*%3B%0Apublic+class+Test+%7B%0A+++public+static+void+main(String%5B%5D+args)+%7B%0A++++++List%3CInteger%3E+nums+%3D+new+ArrayList%3CInteger%3E()%3B%0A++++++nums.add(5)%3B%0A++++++System.out.println(nums)%3B%0A++++++nums.add(3)%3B%0A++++++System.out.println(nums)%3B%0A++++++nums.add(1)%3B%0A++++++System.out.println(nums)%3B%0A++++++nums.add(6)%3B%0A++++++System.out.println(nums)%3B%0A++++++nums.add(0,4)%3B%0A++++++System.out.println(nums)%3B%0A++++++nums.remove(1)%3B%0A++++++System.out.println(nums)%3B%0A+++%7D%0A%7D&amp;mode=display&amp;curInstr=0">Example-8-13-1</url>.</p>

    <exercise label="qalh_2">
        <statement>

        <p> Assume that nums has been created as an ArrayList object and initially contains the following Integer values: [0, 0, 4, 2, 5, 0, 3, 0]. What will nums contain as a result of executing the following method numQuest?</p>
        <program language="java"><code>
private List&lt;Integer&gt; nums;

//precondition: nums.size() &gt; 0
//nums contains Integer objects
public void numQuest() {
   int k = 0;
   Integer zero = new Integer(0);
   while (k &lt; nums.size())
   {
      if (nums.get(k).equals(zero))
         nums.remove(k);
      k++;
   }
}
</code></program>

        </statement>
<choices>

            <choice>
                <statement>
                    <p>[0, 0, 4, 2, 5, 0, 3, 0]</p>
                </statement>
                <feedback>
                    <p>This shows the original values but this code does remove some zeros so this can't be right.</p>
                </feedback>
            </choice>

            <choice>
                <statement>
                    <p>[3, 5, 2, 4, 0, 0, 0, 0]</p>
                </statement>
                <feedback>
                    <p>This shows all zeros at the end, but this code removes 0's so this can't be right.</p>
                </feedback>
            </choice>

            <choice>
                <statement>
                    <p>[0, 0, 0, 0, 4, 2, 5, 3]</p>
                </statement>
                <feedback>
                    <p>This shows all zeros at the beginning, but this code removes zeros so this can't be right.</p>
                </feedback>
            </choice>

            <choice>
                <statement>
                    <p>[4, 2, 5, 3]</p>
                </statement>
                <feedback>
                    <p>This shows all zeros removed. This would be correct if k was only incremented if a value wasn't removed.</p>
                </feedback>
            </choice>

            <choice correct="yes">
                <statement>
                    <p>[0, 4, 2, 5, 3]</p>
                </statement>
                <feedback>
                    <p>This code will loop through the array list and if the current value at the current index (k) is 0, it will remove it. When you remove a value from an array list, it moves all values to the right of that down one. So the first 0 will be deleted but the second one will not since k is incremented even if you remove something. You should only increment k if you didn't remove something and then you would remove all 0's from the list.</p>
                </feedback>
            </choice>
</choices>

    </exercise>
        <p>You can step through the code above by clicking on the following <url href="http://cscircles.cemc.uwaterloo.ca/java_visualize/#code=import+java.util.*%3B%0Apublic+class+ListWorker+%7B%0A+++%0A+++private+List%3CInteger%3E+nums%3B%0A+++%0A+++public+ListWorker(List%3CInteger%3E+theNums)%0A+++%7B%0A++++++nums+%3D+theNums%3B%0A+++%7D%0A%0A+++//+precondition%3A+nums.size()+%3E+0%3B%0A+++//+nums+contains+Integer+objects%0A+++public+void+numQuest()%0A+++%7B%0A+++++++int+k+%3D+0%3B%0A+++++++Integer+zero+%3D+new+Integer(0)%3B%0A+++++++while+(k+%3C+nums.size())%0A+++++++%7B%0A+++++++++System.out.println(%22List%3A+%22+%2B+nums+%2B+%22+and+k+is+%22+%2B+k)%3B%0A+++++++++if+(nums.get(k).equals(zero))%0A+++++++++++nums.remove(k)%3B%0A+++++++++k%2B%2B%3B%0A+++++++%7D%0A+++%7D%0A+++%0A+++public+static+void+main(String%5B%5D+args)%0A+++%7B%0A++++++List%3CInteger%3E+myList+%3D+new+ArrayList%3CInteger%3E()%3B%0A++++++myList.add(0)%3B%0A++++++myList.add(0)%3B%0A++++++myList.add(4)%3B%0A++++++myList.add(2)%3B%0A++++++myList.add(5)%3B%0A++++++myList.add(0)%3B%0A++++++myList.add(3)%3B%0A++++++ListWorker+lWorker+%3D+new+ListWorker(myList)%3B%0A++++++lWorker.numQuest()%3B%0A++++++System.out.println(myList)%3B+%0A++++++%0A+++%7D%0A+++%0A%7D&amp;mode=display&amp;curInstr=0" visual="http://cscircles.cemc.uwaterloo.ca/java_visualize/#code=import+java.util.*%3B%0Apublic+class+ListWorker+%7B%0A+++%0A+++private+List%3CInteger%3E+nums%3B%0A+++%0A+++public+ListWorker(List%3CInteger%3E+theNums)%0A+++%7B%0A++++++nums+%3D+theNums%3B%0A+++%7D%0A%0A+++//+precondition%3A+nums.size()+%3E+0%3B%0A+++//+nums+contains+Integer+objects%0A+++public+void+numQuest()%0A+++%7B%0A+++++++int+k+%3D+0%3B%0A+++++++Integer+zero+%3D+new+Integer(0)%3B%0A+++++++while+(k+%3C+nums.size())%0A+++++++%7B%0A+++++++++System.out.println(%22List%3A+%22+%2B+nums+%2B+%22+and+k+is+%22+%2B+k)%3B%0A+++++++++if+(nums.get(k).equals(zero))%0A+++++++++++nums.remove(k)%3B%0A+++++++++k%2B%2B%3B%0A+++++++%7D%0A+++%7D%0A+++%0A+++public+static+void+main(String%5B%5D+args)%0A+++%7B%0A++++++List%3CInteger%3E+myList+%3D+new+ArrayList%3CInteger%3E()%3B%0A++++++myList.add(0)%3B%0A++++++myList.add(0)%3B%0A++++++myList.add(4)%3B%0A++++++myList.add(2)%3B%0A++++++myList.add(5)%3B%0A++++++myList.add(0)%3B%0A++++++myList.add(3)%3B%0A++++++ListWorker+lWorker+%3D+new+ListWorker(myList)%3B%0A++++++lWorker.numQuest()%3B%0A++++++System.out.println(myList)%3B+%0A++++++%0A+++%7D%0A+++%0A%7D&amp;mode=display&amp;curInstr=0">Example-8-13-2</url>.</p>
        <p>For more practice with free response questions with Lists, look up the following FRQs in this <url href="https://docs.google.com/spreadsheets/d/1Q0pbL9qawN8XlUctkDIiqsP6XdwR-IcWZ_cwauHy0-U/edit#gid=1826848698" visual="https://docs.google.com/spreadsheets/d/1Q0pbL9qawN8XlUctkDIiqsP6XdwR-IcWZ_cwauHy0-U/edit#gid=1826848698">FRQs</url> spreadsheet:</p>
        <p><ul>
            <li>
                <p>question 1 from 2012 FRQs</p>
            </li>
            <li>
                <p>question 3 from 2011 FRQs</p>
            </li>
            <li>
                <p>question 1 from 2008 FRQs</p>
            </li>
            <li>
                <p>and question 3 from 2007 FRQs</p>
            </li>
        </ul></p>
    </section>
