<?xml version="1.0"?>
<!-- Generated by Docutils 0.17.1 -->
<section xml:id="grayImageA">
  <title>Free Response - Gray Image A</title><introduction>
    
    <p>The following is part a of a free response question from 2012.  It was question 4 on the exam.  You can see all the free response questions from past exams at <url href="https://apstudents.collegeboard.org/courses/ap-computer-science-a/free-response-questions-by-year" visual="https://apstudents.collegeboard.org/courses/ap-computer-science-a/free-response-questions-by-year">https://apstudents.collegeboard.org/courses/ap-computer-science-a/free-response-questions-by-year</url>.</p>
    <p><term>Question 4.</term>  A grayscale image is represented by a 2-dimensional rectangular array of pixels (picture elements). A pixel is an integer value that represents a shade of gray. In this question, pixel values can be in the range from 0 through 255, inclusive. A black pixel is represented by 0, and a white pixel is represented by 255. The declaration of the <c>GrayImage</c> class is shown below.</p>
    <program language="java">
      <code>
public class GrayImage
{
    public static final int BLACK = 0;
    public static final int WHITE = 255;

    /**
     * The 2-dimensional representation of this image. Guaranteed not to be null.
     * All values in the array are within the range [BLACK, WHITE], inclusive.
     */
    private int[][] pixelValues;

    /**
     * @return the total number of white pixels in this image. Postcondition: this
     *     image has not been changed.
     */
    public int countWhitePixels()
    {
        /* to be implemented in part (a) */
    }
}
</code>
    </program>
    <p><term>Part a.</term>  Write the method <c>countWhitePixels</c> that returns the number of pixels in the image that contain the value <c>WHITE</c>.  For example, assume that <c>pixelValues</c> contains the following image.</p>
    <figure align="center">
      <caption xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">Example 2D array</caption>
      <image source="Unit4-Data-Collections/Figures/grayImageA.png" width="54%"/>
    </figure>
    <p>A call to <c>countWhitePixels</c> method would return 5 because there are 5 entries (shown in boldface)
            that have the value <c>WHITE</c>.</p>
    <program language="java">
      <code>
public class GrayImage
{
    public static final int BLACK = 0;
    public static final int WHITE = 255;

    /**
     * The 2-dimensional representation of this image. Guaranteed not to be null.
     * All values in the array are within the range [BLACK, WHITE], inclusive.
     */
    private int[][] pixelValues;

    /**
     * @return the total number of white pixels in this image. Postcondition: this
     *     image has not been changed.
     */
    public int countWhitePixels()
    {
        /* to be implemented in part (a) */
    }
}
</code>
    </program>
  </introduction>
  <subsection>
            <title>How to solve this problem</title>
            <p>To solve this problem, we will need to loop through the entire 2D array, looking for instances of a <c>WHITE</c> pixel, keeping track of our count during the loop.</p>
            <exercises line="79" runestone_options="{'showtitle': 'data-showtitle=&quot;Reveal Loop Type Problem&quot;', 'hidetitle': 'data-hidetitle=&quot;Hide Loop T Problem&quot;', 'subchapter': 'grayImageA', 'chapter': 'Unit4-Data-Collections', 'basecourse': 'csawesome2beta', 'optional': '', 'optclass': '', 'divid': '2012greyScale_Q1', 'instructoronly': '', 'is_dynamic': 'True'}" source="/mnt/c/Users/hoffmanb/Documents/Github/CSAwesome2/_fixed_sources/Unit4-Data-Collections/grayImageA.rst">

    <exercise label="frgia_1">
        <statement>

                <p> What kind of loop could you use to solve this problem?</p>

        </statement>
<choices>

            <choice>
                <statement>
                    <p>single for each loop</p>
                </statement>
                <feedback>
                    <p>This is a two-dimensional array so you would need a nested for-each loop.</p>
                </feedback>
            </choice>

            <choice correct="yes">
                <statement>
                    <p>nested for loop</p>
                </statement>
                <feedback>
                    <p>Correct!</p>
                </feedback>
            </choice>

            <choice>
                <statement>
                    <p>nested while loop</p>
                </statement>
                <feedback>
                    <p>You could use a nested while loop, but since you know the numbers of rows and columns a nested for loop is usually better since with a while loop you could forget to increment the row or column index.</p>
                </feedback>
            </choice>
</choices>

    </exercise>
            </exercises>
            <exercises line="94" runestone_options="{'showtitle': 'data-showtitle=&quot;Reveal Alternate Loop Problem&quot;', 'hidetitle': 'data-hidetitle=&quot;Hide Alternate Loop Problem&quot;', 'subchapter': 'grayImageA', 'chapter': 'Unit4-Data-Collections', 'basecourse': 'csawesome2beta', 'optional': '', 'optclass': '', 'divid': '2012greyScale_Q1.5', 'instructoronly': '', 'is_dynamic': 'True'}" source="/mnt/c/Users/hoffmanb/Documents/Github/CSAwesome2/_fixed_sources/Unit4-Data-Collections/grayImageA.rst">

    <exercise label="frgia_1.5">
        <statement>

                <p> What is another kind of loop you could use to solve this problem?</p>

        </statement>
<choices>

            <choice correct="yes">
                <statement>
                    <p>nested for each loop</p>
                </statement>
                <feedback>
                    <p>Correct!</p>
                </feedback>
            </choice>

            <choice>
                <statement>
                    <p>single for loop</p>
                </statement>
                <feedback>
                    <p>For a two-dimensional array you would need to use a nested for loop.</p>
                </feedback>
            </choice>

            <choice>
                <statement>
                    <p>nested switch statement</p>
                </statement>
                <feedback>
                    <p>Nested switch statements would not work in this situation and are generally convoluted and difficult to read.</p>
                </feedback>
            </choice>
</choices>

    </exercise>
            </exercises>
            <p>Looping through a 2D array is more complicated than the simple arrays we usually see, requiring nested for loops. Check out the questions and code below, which displays how nested for loops work to display a block of numbers.</p>
            <subsection>

    <program interactive="activecode" language="java">
        <code>
public class Test
{
    public static void main(String[] args)
    {
        for (int i = 0; i &lt; 5; i++)
        {
            for (int j = 0; j &lt; 5; j++)
            {
                System.out.print(j);
            }
            System.out.println();
        }
    }
}
        </code>
    </program>
            </subsection>
            <subsection>

    <program interactive="activecode" language="java">
        <code>
 public class Test
 {
     public static void main(String[] args)
     {
         int[][] arr = new int[5][5];
         for (int[] row : arr)
         {
             for (int ent : row)
             {
                 System.out.print(ent);
             }
             System.out.println();
         }
     }
 }
        </code>
    </program>
            </subsection>
        </subsection>
  <subsection>
            <title>Algorithm</title>
            <p>When approaching this problem, it can be helpful to look for keywords or hints that maybe be in the problem statement. This section contains a plain English explanation of one way to solve this problem as well as problems that test your understanding of how to write the code to do those things.  Click on the buttons to reveal the questions.</p>

<exercise label="gray_image_A">
    <statement>
            <p> Explain in plain English what your code will have to do to answer this question.  Use the variable names given above.</p>

    </statement>
</exercise>
            <exercises line="166" runestone_options="{'showtitle': 'data-showtitle=&quot;Reveal Class Problem&quot;', 'hidetitle': 'data-hidetitle=&quot;Hide Class Problem&quot;', 'subchapter': 'grayImageA', 'chapter': 'Unit4-Data-Collections', 'basecourse': 'csawesome2beta', 'optional': '', 'optclass': '', 'divid': '2012GreyScale_alg', 'instructoronly': '', 'is_dynamic': 'True'}" source="/mnt/c/Users/hoffmanb/Documents/Github/CSAwesome2/_fixed_sources/Unit4-Data-Collections/grayImageA.rst">

    <exercise label="2012GreyScale_alg_ans">
        <statement>

                <p> Which class is <c>countWhitePixels</c> a method in?</p>

        </statement>
<choices>

            <choice>
                <statement>
                    <p>pixelValues</p>
                </statement>
                <feedback>
                    <p>Pixel values is a private member variable of the overall class, it is not the class that contains countWhitePixels</p>
                </feedback>
            </choice>

            <choice>
                <statement>
                    <p>greyimage</p>
                </statement>
                <feedback>
                    <p>Capitalization and spelling are important! Check the class name again carefully.</p>
                </feedback>
            </choice>

            <choice>
                <statement>
                    <p>countWhitePixels</p>
                </statement>
                <feedback>
                    <p>This is the name of the method you are writing! Since it is not a constructor, the overall Class name cannot be countWhitePixels</p>
                </feedback>
            </choice>

            <choice correct="yes">
                <statement>
                    <p>GrayImage</p>
                </statement>
                <feedback>
                    <p>Correct!</p>
                </feedback>
            </choice>
</choices>

    </exercise>
            </exercises>
            <exercises line="183" runestone_options="{'showtitle': 'data-showtitle=&quot;Reveal Variable Problem&quot;', 'hidetitle': 'data-hidetitle=&quot;Hide Variable Problem&quot;', 'subchapter': 'grayImageA', 'chapter': 'Unit4-Data-Collections', 'basecourse': 'csawesome2beta', 'optional': '', 'optclass': '', 'divid': '2012GreyScale_alg1', 'instructoronly': '', 'is_dynamic': 'True'}" source="/mnt/c/Users/hoffmanb/Documents/Github/CSAwesome2/_fixed_sources/Unit4-Data-Collections/grayImageA.rst">

    <exercise label="2012GreyScale_alg1_ans">
        <statement>

                <p> What array will you be modifying in this method?</p>

        </statement>
<choices>

            <choice correct="yes">
                <statement>
                    <p>pixelValues</p>
                </statement>
                <feedback>
                    <p>Correct!</p>
                </feedback>
            </choice>

            <choice>
                <statement>
                    <p>You need to initialize your own</p>
                </statement>
                <feedback>
                    <p>This method iterates through an already existing image, which can be found in the GreyImage class initialization.</p>
                </feedback>
            </choice>

            <choice>
                <statement>
                    <p>countWhitePixels</p>
                </statement>
                <feedback>
                    <p>This is the name of the method you are writing, not an array.</p>
                </feedback>
            </choice>

            <choice>
                <statement>
                    <p>This method is called using the dot operation so you can just write "this"</p>
                </statement>
                <feedback>
                    <p>Although this method is called with the dot operator, you still need to specify the name of the array and cannot only write "this"</p>
                </feedback>
            </choice>
</choices>

    </exercise>
            </exercises>
            <p>There are many ways to solve this question, but we will only cover two in this section. Although it is a good exercise to be able to write the solution in multiple ways, you do not need to write both for the AP exam and you can just look at the problems below which relate to the method that is more intuitive to you.</p>
            <p>If you want to solve this problem using nested for loops, complete the three questions below.</p>
            <exercises line="204" runestone_options="{'showtitle': 'data-showtitle=&quot;Reveal For Loop Outer Bound Problem&quot;', 'hidetitle': 'data-hidetitle=&quot;Hide For Loop Outer Bound Problem&quot;', 'subchapter': 'grayImageA', 'chapter': 'Unit4-Data-Collections', 'basecourse': 'csawesome2beta', 'optional': '', 'optclass': '', 'divid': '2012GreyScale_alg2', 'instructoronly': '', 'is_dynamic': 'True'}" source="/mnt/c/Users/hoffmanb/Documents/Github/CSAwesome2/_fixed_sources/Unit4-Data-Collections/grayImageA.rst">

    <exercise label="2012GreyScale_alg2_ans">
        <statement>

                <p> What could you write for the outer for loop so that it iterates through the rows of the array?</p>

        </statement>
<choices>

            <choice>
                <statement>
                    <p>(int row = 0; row &lt; pixelValues.length - 1; row++)</p>
                </statement>
                <feedback>
                    <p>This does not iterate through all the rows of the array</p>
                </feedback>
            </choice>

            <choice correct="yes">
                <statement>
                    <p>(int row = 0; row &lt; pixelValues.length; row++)</p>
                </statement>
                <feedback>
                    <p>Correct</p>
                </feedback>
            </choice>

            <choice>
                <statement>
                    <p>(int row = 0; row &lt; pixelValues.height; row++)</p>
                </statement>
                <feedback>
                    <p>The .height method does not exist</p>
                </feedback>
            </choice>

            <choice>
                <statement>
                    <p>(int row = 0; row &lt; pixelValues.height - 1; row++)</p>
                </statement>
                <feedback>
                    <p>The .height method does not exist</p>
                </feedback>
            </choice>
</choices>

    </exercise>
            </exercises>
            <exercises line="221" runestone_options="{'showtitle': 'data-showtitle=&quot;Reveal For Loop Inner Bound Problem&quot;', 'hidetitle': 'data-hidetitle=&quot;Hide For Loop Inner Bound Problem&quot;', 'subchapter': 'grayImageA', 'chapter': 'Unit4-Data-Collections', 'basecourse': 'csawesome2beta', 'optional': '', 'optclass': '', 'divid': '2012GreyScale_alg3', 'instructoronly': '', 'is_dynamic': 'True'}" source="/mnt/c/Users/hoffmanb/Documents/Github/CSAwesome2/_fixed_sources/Unit4-Data-Collections/grayImageA.rst">

    <exercise label="2012GreyScale_alg3_ans">
        <statement>

                <p> What could you write for the inner for loop so that it iterates through the columns of the array?</p>

        </statement>
<choices>

            <choice>
                <statement>
                    <p>(int col = 0; col &lt;= row; col++)</p>
                </statement>
                <feedback>
                    <p>This does not correctly iterate through all the columns in the array</p>
                </feedback>
            </choice>

            <choice>
                <statement>
                    <p>(int col = 0; col &lt; pixelValues[0].length - 1; col++)</p>
                </statement>
                <feedback>
                    <p>This stops one short of iterating through the whole array</p>
                </feedback>
            </choice>

            <choice>
                <statement>
                    <p>(int col = 0; col &lt; row; col++)</p>
                </statement>
                <feedback>
                    <p>This does not correctly iterate through all the columns in the array</p>
                </feedback>
            </choice>

            <choice correct="yes">
                <statement>
                    <p>(int col = 0; col &lt; pixelValues[0].length; col++)</p>
                </statement>
                <feedback>
                    <p>Correct!</p>
                </feedback>
            </choice>
</choices>

    </exercise>
            </exercises>
            <exercises line="238" runestone_options="{'showtitle': 'data-showtitle=&quot;Reveal For Loop Equivalence Problem&quot;', 'hidetitle': 'data-hidetitle=&quot;Hide For Loop Equivalence Problem&quot;', 'subchapter': 'grayImageA', 'chapter': 'Unit4-Data-Collections', 'basecourse': 'csawesome2beta', 'optional': '', 'optclass': '', 'divid': '2012GreyScale_alg4', 'instructoronly': '', 'is_dynamic': 'True'}" source="/mnt/c/Users/hoffmanb/Documents/Github/CSAwesome2/_fixed_sources/Unit4-Data-Collections/grayImageA.rst">

    <exercise label="2012GreyScale_alg4_ans">
        <statement>

                <p> how could you check if the current value is white?</p>

        </statement>
<choices>

            <choice>
                <statement>
                    <p>if (pixelValues[row][col] == 0)</p>
                </statement>
                <feedback>
                    <p>0 is actually equal to black</p>
                </feedback>
            </choice>

            <choice>
                <statement>
                    <p>if (pixelValues[col][row] == 255)</p>
                </statement>
                <feedback>
                    <p>the column and row variables are switched, so the array could possibly go out of bounds.</p>
                </feedback>
            </choice>

            <choice correct="yes">
                <statement>
                    <p>if (pixelValues[row][col] == WHITE)</p>
                </statement>
                <feedback>
                    <p>Correct!</p>
                </feedback>
            </choice>

            <choice>
                <statement>
                    <p>if (pixelValue == WHITE)</p>
                </statement>
                <feedback>
                    <p>pixelValue does not access the integers stored in the array</p>
                </feedback>
            </choice>
</choices>

    </exercise>
            </exercises>
            <p>Alternatively, if you want to solve this problem using nested for each loops, complete the three questions below.</p>
            <exercises line="257" runestone_options="{'showtitle': 'data-showtitle=&quot;Reveal For Each Outer Bounds Problem&quot;', 'hidetitle': 'data-hidetitle=&quot;Hide For Each Outer Bounds Problem&quot;', 'subchapter': 'grayImageA', 'chapter': 'Unit4-Data-Collections', 'basecourse': 'csawesome2beta', 'optional': '', 'optclass': '', 'divid': '2012GreyScale_alg5', 'instructoronly': '', 'is_dynamic': 'True'}" source="/mnt/c/Users/hoffmanb/Documents/Github/CSAwesome2/_fixed_sources/Unit4-Data-Collections/grayImageA.rst">

    <exercise label="2012GreyScale_alg5_ans">
        <statement>

                <p> What could you write for the outer for loop so that it iterates through the rows of the array?</p>

        </statement>
<choices>

            <choice>
                <statement>
                    <p>(int[] row; row &lt; pixelValues; row++)</p>
                </statement>
                <feedback>
                    <p>This is not the correct way to initialize a for each loop</p>
                </feedback>
            </choice>

            <choice>
                <statement>
                    <p>(int row : this.pixelValues)</p>
                </statement>
                <feedback>
                    <p>When looping through an array with a for each loop you need to include the '[]'</p>
                </feedback>
            </choice>

            <choice correct="yes">
                <statement>
                    <p>(int[] row : this.pixelValues)</p>
                </statement>
                <feedback>
                    <p>Correct!</p>
                </feedback>
            </choice>

            <choice>
                <statement>
                    <p>(int[] row ; pixelValues)</p>
                </statement>
                <feedback>
                    <p>A for each loop has a colon not a semicolon.</p>
                </feedback>
            </choice>
</choices>

    </exercise>
            </exercises>
            <exercises line="274" runestone_options="{'showtitle': 'data-showtitle=&quot;Reveal For Each Inner Bounds Problem&quot;', 'hidetitle': 'data-hidetitle=&quot;Hide For Each Inner Bounds Problem&quot;', 'subchapter': 'grayImageA', 'chapter': 'Unit4-Data-Collections', 'basecourse': 'csawesome2beta', 'optional': '', 'optclass': '', 'divid': '2012GreyScale_alg6', 'instructoronly': '', 'is_dynamic': 'True'}" source="/mnt/c/Users/hoffmanb/Documents/Github/CSAwesome2/_fixed_sources/Unit4-Data-Collections/grayImageA.rst">

    <exercise label="2012GreyScale_alg6_ans">
        <statement>

                <p> What could you write for the inner for loop so that it iterates through the columns of the array?</p>

        </statement>
<choices>

            <choice>
                <statement>
                    <p>(int col = 0; col &lt; pixelValues.length; col++)</p>
                </statement>
                <feedback>
                    <p>This is not the correct way to initialize a for each loop</p>
                </feedback>
            </choice>

            <choice correct="yes">
                <statement>
                    <p>(int pv : row)</p>
                </statement>
                <feedback>
                    <p>Correct!</p>
                </feedback>
            </choice>

            <choice>
                <statement>
                    <p>(int pv[] : row)</p>
                </statement>
                <feedback>
                    <p>For the inner bound, you are no longer iterating through an array so you do not need to include the '[]'</p>
                </feedback>
            </choice>

            <choice>
                <statement>
                    <p>(int col : pixelValues)</p>
                </statement>
                <feedback>
                    <p>Your outer bound is already iterating through pixelValues, your inner bound needs to loop through something else</p>
                </feedback>
            </choice>
</choices>

    </exercise>
            </exercises>
            <exercises line="291" runestone_options="{'showtitle': 'data-showtitle=&quot;Reveal For Each Equivalence Problem&quot;', 'hidetitle': 'data-hidetitle=&quot;Hide For Each Equivalence Problem&quot;', 'subchapter': 'grayImageA', 'chapter': 'Unit4-Data-Collections', 'basecourse': 'csawesome2beta', 'optional': '', 'optclass': '', 'divid': '2012GreyScale_alg7', 'instructoronly': '', 'is_dynamic': 'True'}" source="/mnt/c/Users/hoffmanb/Documents/Github/CSAwesome2/_fixed_sources/Unit4-Data-Collections/grayImageA.rst">

    <exercise label="2012GreyScale_alg7_ans">
        <statement>

                <p> How will you check if pv is white?</p>

        </statement>
<choices>

            <choice correct="yes">
                <statement>
                    <p>if (pv == this.WHITE)</p>
                </statement>
                <feedback>
                    <p>Correct!</p>
                </feedback>
            </choice>

            <choice>
                <statement>
                    <p>if (pv == {255,255,255})</p>
                </statement>
                <feedback>
                    <p>Our image is in greyscale and is not a three value color</p>
                </feedback>
            </choice>

            <choice>
                <statement>
                    <p>if (pv == 0)</p>
                </statement>
                <feedback>
                    <p>0 is the value of black</p>
                </feedback>
            </choice>

            <choice>
                <statement>
                    <p>if (pv == white)</p>
                </statement>
                <feedback>
                    <p>When using private variables, you need to make sure the spelling is the same.</p>
                </feedback>
            </choice>
</choices>

    </exercise>
            </exercises>
        </subsection>
  <subsection>
            <title>Try and Solve It</title>

<exercise label="lcfrgia2">
    <statement>
            <p>FRQ Gray Image A: write the code for the method <c>countWhitePixels</c>. When you are ready click “Run” to test your solution.</p>

    </statement>
    <program interactive="activecode" language="java">
        <code>
public class GrayImage
{
    public static final int BLACK = 0;
    public static final int WHITE = 255;

    /**
     * The 2-dimensional representation of this image. Guaranteed not to be null.
     * All values in the array are within the range [BLACK, WHITE], inclusive.
     */
    private int[][] pixelValues;

    /** constructor that takes a 2D array */
    public GrayImage(int[][] theArray)
    {
        pixelValues = theArray;
    }

    /**
     * @return the total number of white pixels in this image. Postcondition: this
     *     image has not been changed.
     */
    public int countWhitePixels() {}

    /** main for testing */
    public static void main(String[] args)
    {
        int[][] values =
        {
            {255, 184, 178, 84, 129},
            {84, 255, 255, 130, 94},
            {78, 255, 0, 0, 78},
            {84, 130, 255, 130, 84}
        };
        GrayImage image = new GrayImage(values);
        System.out.println(
                "count white should be 5 and is " + image.countWhitePixels());
    }
}

</code><tests>
import static org.junit.Assert.*;

import org.junit.*;

import java.io.*;

public class RunestoneTests extends CodeTestHelper
{

    @Test
    public void testMain() throws IOException
    {
        String output = getMethodOutput("main");
        String expect = "count white should be 5 and is 5\n";

        boolean passed = getResults(expect, output, "Expected output from main");
        assertTrue(passed);
    }

    @Test
    public void test1()
    {
        int[][] values =
        {
            {255, 255, 255},
            {255, 255, 255},
            {255, 255, 255}
        };

        GrayImage image = new GrayImage(values);
        String output = String.valueOf(image.countWhitePixels());
        String expect = "9";

        boolean passed = getResults(expect, output, "countWhitePixels 3X3, all are white");
        assertTrue(passed);
    }

    @Test
    public void test2()
    {
        int[][] values =
        {
            {255, 0},
            {0, 255},
            {255, 0},
            {0, 255},
        };

        GrayImage image = new GrayImage(values);
        String output = String.valueOf(image.countWhitePixels());
        String expect = "4";

        boolean passed = getResults(expect, output, "countWhitePixels 4X2, half are white");
        assertTrue(passed);
    }

    @Test
    public void test3()
    {
        String code = getCode();
        String target = "for";

        int num = countOccurencesRegex(code, target);

        boolean passed = num == 2;

        getResults("2", "" + num, "2 for loops (nested)", passed);
        assertTrue(passed);
    }
}
        </tests>
    </program>
</exercise>
        </subsection>
  <subsection>
            <title>Video - One way to code the solution</title>
            
            <p>The following video is also on YouTube at <url href="https://youtu.be/Rx4bPs0wkxU" visual="https://youtu.be/Rx4bPs0wkxU">https://youtu.be/Rx4bPs0wkxU</url>.  It walks through coding a solution.</p>

    <video youtube="Rx4bPs0wkxU"/>
            </subsection>
</section>
