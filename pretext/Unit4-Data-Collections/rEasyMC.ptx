<?xml version="1.0"?>
<!-- Generated by Docutils 0.17.1 -->
<section xml:id="rEasyMC">
  <title>Easier Multiple Choice Questions</title>
  <p>These problems are easier than most of those that you will usually see on the AP CSA exam.</p>
  <exercises>
    <exercise label="qre_1">
        <statement>

        <p> Which line has the recursive call?</p>
        <program language="java"><code>
public static int factorial(int n)
{
    if (n == 0)
    {
        return 1;
    }
    else
    {
        return n * factorial(n-1);
    }
}
</code></program>

        </statement>
<choices>

            <choice>
                <statement>
                    <p>1</p>
                </statement>
                <feedback>
                    <p>This is the method declaration.  Look for a call to the same method in the body of the method.</p>
                </feedback>
            </choice>

            <choice>
                <statement>
                    <p>3</p>
                </statement>
                <feedback>
                    <p>This is a conditional, not a method call.</p>
                </feedback>
            </choice>

            <choice>
                <statement>
                    <p>5</p>
                </statement>
                <feedback>
                    <p>This is a return statement, not a method call.</p>
                </feedback>
            </choice>

            <choice correct="yes">
                <statement>
                    <p>9</p>
                </statement>
                <feedback>
                    <p>This line contains a call to the same method which makes this method recursive.</p>
                </feedback>
            </choice>
</choices>

    </exercise>
    <exercise label="qre_2">
        <statement>

        <p> Which line has the recursive call?</p>
        <program language="java"><code>
public String starString(int n)
{
    if (n == 0)
    {
        return "*";
    }
    else
    {
        return starString(n - 1) + starString(n - 1);
    }
}
</code></program>

        </statement>
<choices>

            <choice>
                <statement>
                    <p>1</p>
                </statement>
                <feedback>
                    <p>This is the method declaration.  Look for a call to the same method in the body of the method.</p>
                </feedback>
            </choice>

            <choice>
                <statement>
                    <p>3</p>
                </statement>
                <feedback>
                    <p>This is a conditional, not a method call.</p>
                </feedback>
            </choice>

            <choice>
                <statement>
                    <p>5</p>
                </statement>
                <feedback>
                    <p>This is a return statement, not a method call.</p>
                </feedback>
            </choice>

            <choice>
                <statement>
                    <p>7</p>
                </statement>
                <feedback>
                    <p>This is an else which is part of a conditional, not a method call.</p>
                </feedback>
            </choice>

            <choice correct="yes">
                <statement>
                    <p>9</p>
                </statement>
                <feedback>
                    <p>This line contains a call to the same method which makes this method recursive.</p>
                </feedback>
            </choice>
</choices>

    </exercise>
    <exercise label="qre_3">
        <statement>

        <p> How many recursive calls does the following method contain?</p>
        <program language="java"><code>
public static int fibonacci(int n)
{
    if (n == 0)
    {
        return 0;
    }
    else if (n == 1)
    {
        return 1;
    }
    else
    {
        return fibonacci(n-1) + fibonacci(n-2);
    }
}
</code></program>

        </statement>
<choices>

            <choice>
                <statement>
                    <p>0</p>
                </statement>
                <feedback>
                    <p>Look at line 13 more closely.</p>
                </feedback>
            </choice>

            <choice>
                <statement>
                    <p>1</p>
                </statement>
                <feedback>
                    <p>Many recursive methods only have one recursive call.  But, this one has two.</p>
                </feedback>
            </choice>

            <choice correct="yes">
                <statement>
                    <p>2</p>
                </statement>
                <feedback>
                    <p>Line 13 has two calls to <code>fibonacci</code>.</p>
                </feedback>
            </choice>

            <choice>
                <statement>
                    <p>3</p>
                </statement>
                <feedback>
                    <p>There are not 3 calls to <code>fibonacci</code>.</p>
                </feedback>
            </choice>
</choices>

    </exercise>
    <exercise label="qre_4">
        <statement>

        <p> How many recursive calls does the following method contain?</p>
        <program language="java"><code>
public static int multiplyEvens(int n)
{
    if (n == 1)
    {
        return 2;
    }
    else
    {
        return 2 * n * multiplyEvens(n - 1);
    }
}
</code></program>

        </statement>
<choices>

            <choice>
                <statement>
                    <p>0</p>
                </statement>
                <feedback>
                    <p>Look for a call to the same method in the body of the method.</p>
                </feedback>
            </choice>

            <choice correct="yes">
                <statement>
                    <p>1</p>
                </statement>
                <feedback>
                    <p>Line 9 has one call to <code>multiplyEvens</code>.</p>
                </feedback>
            </choice>

            <choice>
                <statement>
                    <p>2</p>
                </statement>
                <feedback>
                    <p>Where do you see 2 calls to <code>multiplyEvens</code>?</p>
                </feedback>
            </choice>

            <choice>
                <statement>
                    <p>3</p>
                </statement>
                <feedback>
                    <p>Where do you see 3 calls to <code>multiplyEvens</code>?</p>
                </feedback>
            </choice>
</choices>

    </exercise>
  </exercises>
</section>
